{"version":3,"file":"static/js/528.9c11c49b.chunk.js","mappings":"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","sources":["../node_modules/@aws-crypto/ie11-detection/src/MsWindow.ts","../node_modules/@aws-crypto/ie11-detection/src/index.ts","../node_modules/@aws-crypto/ie11-detection/node_modules/tslib/tslib.es6.js","../node_modules/@aws-crypto/sha256-browser/src/constants.ts","../node_modules/@aws-crypto/sha256-browser/src/crossPlatformSha256.ts","../node_modules/@aws-crypto/sha256-browser/src/ie11Sha256.ts","../node_modules/@aws-crypto/sha256-browser/src/index.ts","../node_modules/@aws-crypto/sha256-browser/src/isEmptyData.ts","../node_modules/@aws-crypto/sha256-browser/src/webCryptoSha256.ts","../node_modules/@aws-crypto/sha256-browser/node_modules/tslib/tslib.es6.js","../node_modules/@aws-crypto/sha256-js/src/RawSha256.ts","../node_modules/@aws-crypto/sha256-js/src/constants.ts","../node_modules/@aws-crypto/sha256-js/src/index.ts","../node_modules/@aws-crypto/sha256-js/src/jsSha256.ts","../node_modules/@aws-crypto/sha256-js/node_modules/tslib/tslib.es6.js","../node_modules/@aws-crypto/supports-web-crypto/src/index.ts","../node_modules/@aws-crypto/supports-web-crypto/src/supportsWebCrypto.ts","../node_modules/@aws-crypto/supports-web-crypto/node_modules/tslib/tslib.es6.js","../node_modules/@aws-crypto/util/src/convertToBuffer.ts","../node_modules/@aws-crypto/util/src/index.ts","../node_modules/@aws-crypto/util/src/isEmptyData.ts","../node_modules/@aws-crypto/util/src/numToUint8.ts","../node_modules/@aws-crypto/util/src/uint32ArrayFrom.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@aws-sdk/util-config-provider/dist-es/booleanSelector.js","../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/isFipsRegion.js","../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/getRealRegion.js","../node_modules/@aws-sdk/middleware-content-length/dist-es/index.js","../node_modules/@aws-sdk/middleware-host-header/dist-es/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@aws-sdk/util-retry/dist-es/config.js","../node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js","../node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/@aws-sdk/service-error-classification/dist-es/constants.js","../node_modules/@aws-sdk/service-error-classification/dist-es/index.js","../node_modules/@aws-sdk/util-retry/dist-es/DefaultRateLimiter.js","../node_modules/@aws-sdk/util-retry/dist-es/defaultRetryToken.js","../node_modules/@aws-sdk/util-retry/dist-es/constants.js","../node_modules/@aws-sdk/util-retry/dist-es/defaultRetryBackoffStrategy.js","../node_modules/@aws-sdk/util-retry/dist-es/StandardRetryStrategy.js","../node_modules/@aws-sdk/util-retry/dist-es/AdaptiveRetryStrategy.js","../node_modules/@aws-sdk/protocol-http/dist-es/httpResponse.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@aws-sdk/middleware-retry/dist-es/retryMiddleware.js","../node_modules/@aws-sdk/middleware-retry/dist-es/util.js","../node_modules/@aws-sdk/property-provider/dist-es/ProviderError.js","../node_modules/@aws-sdk/util-hex-encoding/dist-es/index.js","../node_modules/@aws-sdk/property-provider/dist-es/memoize.js","../node_modules/@aws-sdk/signature-v4/dist-es/constants.js","../node_modules/@aws-sdk/signature-v4/dist-es/credentialDerivation.js","../node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalHeaders.js","../node_modules/@aws-sdk/util-uri-escape/dist-es/escape-uri.js","../node_modules/@aws-sdk/signature-v4/dist-es/getPayloadHash.js","../node_modules/@aws-sdk/is-array-buffer/dist-es/index.js","../node_modules/@aws-sdk/signature-v4/dist-es/headerUtil.js","../node_modules/@aws-sdk/signature-v4/dist-es/cloneRequest.js","../node_modules/@aws-sdk/signature-v4/dist-es/moveHeadersToQuery.js","../node_modules/@aws-sdk/signature-v4/dist-es/prepareRequest.js","../node_modules/@aws-sdk/signature-v4/dist-es/utilDate.js","../node_modules/@aws-sdk/signature-v4/dist-es/SignatureV4.js","../node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalQuery.js","../node_modules/@aws-sdk/middleware-signing/dist-es/configurations.js","../node_modules/@aws-sdk/middleware-signing/dist-es/utils/getSkewCorrectedDate.js","../node_modules/@aws-sdk/middleware-signing/dist-es/utils/getUpdatedSystemClockOffset.js","../node_modules/@aws-sdk/middleware-signing/dist-es/utils/isClockSkewed.js","../node_modules/@aws-sdk/middleware-signing/dist-es/middleware.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js","../node_modules/@aws-sdk/querystring-builder/dist-es/index.js","../node_modules/@aws-sdk/fetch-http-handler/dist-es/request-timeout.js","../node_modules/@aws-sdk/util-base64/dist-es/constants.browser.js","../node_modules/@aws-sdk/fetch-http-handler/dist-es/fetch-http-handler.js","../node_modules/@aws-sdk/util-base64/dist-es/fromBase64.browser.js","../node_modules/@aws-sdk/util-base64/dist-es/toBase64.browser.js","../node_modules/@aws-sdk/fetch-http-handler/dist-es/stream-collector.js","../node_modules/@aws-sdk/invalid-dependency/dist-es/invalidProvider.js","../node_modules/@aws-sdk/util-body-length-browser/dist-es/calculateBodyLength.js","../node_modules/@aws-sdk/util-user-agent-browser/dist-es/index.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js","../node_modules/@aws-sdk/util-endpoints/dist-es/debug/debugId.js","../node_modules/@aws-sdk/util-endpoints/dist-es/debug/toDebugString.js","../node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js","../node_modules/@aws-sdk/types/dist-es/endpoint.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/isValidHostLabel.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/booleanEquals.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttr.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttrPathList.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/isSet.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/not.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/parseURL.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/stringEquals.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/substring.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/uriEncode.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTemplate.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateExpression.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getReferenceValue.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/callFunction.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateCondition.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateConditions.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointHeaders.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperty.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperties.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointUrl.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateEndpointRule.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateErrorRule.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTreeRule.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateRules.js","../node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js","../node_modules/@aws-sdk/client-ses/dist-es/endpoint/ruleset.js","../node_modules/@aws-sdk/client-ses/dist-es/endpoint/endpointResolver.js","../node_modules/@aws-sdk/util-defaults-mode-browser/dist-es/constants.js","../node_modules/@aws-sdk/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js","../node_modules/@aws-sdk/client-ses/dist-es/runtimeConfig.browser.js","../node_modules/@aws-sdk/client-ses/dist-es/runtimeConfig.shared.js","../node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../node_modules/@aws-sdk/client-ses/dist-es/SESClient.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js","../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/resolveRegionConfig.js","../node_modules/@aws-sdk/client-ses/dist-es/endpoint/EndpointParameters.js","../node_modules/@aws-sdk/middleware-retry/dist-es/configurations.js","../node_modules/@aws-sdk/client-ses/dist-es/models/models_0.js","../node_modules/@aws-sdk/client-ses/dist-es/models/SESServiceException.js","../node_modules/@aws-sdk/client-ses/dist-es/protocols/Aws_query.js","../node_modules/@aws-sdk/client-ses/dist-es/commands/SendEmailCommand.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/service-customizations/s3.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/getEndpointPlugin.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/endpointMiddleware.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/resolveEndpointConfig.js","../node_modules/@aws-sdk/middleware-serde/dist-es/serdePlugin.js","../node_modules/@aws-sdk/middleware-serde/dist-es/deserializerMiddleware.js","../node_modules/@aws-sdk/middleware-serde/dist-es/serializerMiddleware.js","../node_modules/@aws-sdk/protocol-http/dist-es/httpRequest.js","../node_modules/@aws-sdk/smithy-client/dist-es/NoOpLogger.js","../node_modules/@aws-sdk/middleware-stack/dist-es/MiddlewareStack.js","../node_modules/@aws-sdk/smithy-client/dist-es/client.js","../node_modules/@aws-sdk/smithy-client/dist-es/command.js","../node_modules/@aws-sdk/smithy-client/dist-es/parse-utils.js","../node_modules/@aws-sdk/smithy-client/dist-es/date-utils.js","../node_modules/@aws-sdk/smithy-client/dist-es/exceptions.js","../node_modules/@aws-sdk/smithy-client/dist-es/default-error-handler.js","../node_modules/@aws-sdk/smithy-client/dist-es/defaults-mode.js","../node_modules/@aws-sdk/smithy-client/dist-es/extended-encode-uri-component.js","../node_modules/@aws-sdk/smithy-client/dist-es/get-value-from-text-node.js","../node_modules/@aws-sdk/smithy-client/dist-es/lazy-json.js","../node_modules/@aws-sdk/url-parser/dist-es/index.js","../node_modules/@aws-sdk/querystring-parser/dist-es/index.js","../node_modules/@aws-sdk/util-locate-window/dist-es/index.js","../node_modules/@aws-sdk/util-middleware/dist-es/normalizeProvider.js","../node_modules/@aws-sdk/util-utf8-browser/dist-es/index.js","../node_modules/@aws-sdk/util-utf8-browser/dist-es/whatwgEncodingApi.js","../node_modules/@aws-sdk/util-utf8-browser/dist-es/pureJs.js","../node_modules/bowser/es5.js","../node_modules/fast-xml-parser/src/fxp.js","../node_modules/fast-xml-parser/src/util.js","../node_modules/fast-xml-parser/src/validator.js","../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../node_modules/strnum/strnum.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { MsSubtleCrypto } from \"./MsSubtleCrypto\";\n\ntype SubtleCryptoMethod =\n  | \"decrypt\"\n  | \"digest\"\n  | \"encrypt\"\n  | \"exportKey\"\n  | \"generateKey\"\n  | \"importKey\"\n  | \"sign\"\n  | \"verify\";\n\nconst msSubtleCryptoMethods: Array<SubtleCryptoMethod> = [\n  \"decrypt\",\n  \"digest\",\n  \"encrypt\",\n  \"exportKey\",\n  \"generateKey\",\n  \"importKey\",\n  \"sign\",\n  \"verify\"\n];\n\n/**\n * The value accessible as `window.msCrypto` in Internet Explorer 11.\n */\nexport interface MsCrypto {\n  getRandomValues: (toFill: Uint8Array) => void;\n  subtle: MsSubtleCrypto;\n}\n\n/**\n * The `window` object in Internet Explorer 11. This interface does not\n * exhaustively document the prefixed features of `window` in IE11.\n */\nexport interface MsWindow extends Window {\n  MSInputMethodContext: any;\n  msCrypto: MsCrypto;\n}\n\nfunction quacksLikeAnMsWindow(window: Window): window is MsWindow {\n  return \"MSInputMethodContext\" in window && \"msCrypto\" in window;\n}\n\n/**\n * Determines if the provided window is (or is like) the window object one would\n * expect to encounter in Internet Explorer 11.\n */\nexport function isMsWindow(window: Window): window is MsWindow {\n  if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {\n    const { getRandomValues, subtle } = window.msCrypto;\n    return msSubtleCryptoMethods\n      .map<Function>(methodName => subtle[methodName])\n      .concat(getRandomValues)\n      .every(method => typeof method === \"function\");\n  }\n\n  return false;\n}\n","export * from \"./CryptoOperation\";\nexport * from \"./Key\";\nexport * from \"./KeyOperation\";\nexport * from \"./MsSubtleCrypto\";\nexport * from \"./MsWindow\";\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const SHA_256_HASH: { name: \"SHA-256\" } = { name: \"SHA-256\" };\n\nexport const SHA_256_HMAC_ALGO: { name: \"HMAC\"; hash: { name: \"SHA-256\" } } = {\n  name: \"HMAC\",\n  hash: SHA_256_HASH\n};\n\nexport const EMPTY_DATA_SHA_256 = new Uint8Array([\n  227,\n  176,\n  196,\n  66,\n  152,\n  252,\n  28,\n  20,\n  154,\n  251,\n  244,\n  200,\n  153,\n  111,\n  185,\n  36,\n  39,\n  174,\n  65,\n  228,\n  100,\n  155,\n  147,\n  76,\n  164,\n  149,\n  153,\n  27,\n  120,\n  82,\n  184,\n  85\n]);\n","import { Sha256 as Ie11Sha256 } from \"./ie11Sha256\";\nimport { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\nimport { Sha256 as JsSha256 } from \"@aws-crypto/sha256-js\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { supportsWebCrypto } from \"@aws-crypto/supports-web-crypto\";\nimport { isMsWindow } from \"@aws-crypto/ie11-detection\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private readonly hash: Hash;\n\n  constructor(secret?: SourceData) {\n    if (supportsWebCrypto(locateWindow())) {\n      this.hash = new WebCryptoSha256(secret);\n    } else if (isMsWindow(locateWindow())) {\n      this.hash = new Ie11Sha256(secret);\n    } else {\n      this.hash = new JsSha256(secret);\n    }\n  }\n\n  update(data: SourceData, encoding?: \"utf8\" | \"ascii\" | \"latin1\"): void {\n    this.hash.update(data, encoding);\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.hash.digest();\n  }\n}\n","import { isEmptyData } from \"./isEmptyData\";\nimport { SHA_256_HMAC_ALGO } from \"./constants\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { CryptoOperation, Key, MsWindow } from \"@aws-crypto/ie11-detection\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private operation: Promise<CryptoOperation>;\n\n  constructor(secret?: SourceData) {\n    if (secret) {\n      this.operation = getKeyPromise(secret).then(keyData =>\n        (locateWindow() as MsWindow).msCrypto.subtle.sign(\n          SHA_256_HMAC_ALGO,\n          keyData\n        )\n      );\n      this.operation.catch(() => {});\n    } else {\n      this.operation = Promise.resolve(\n        (locateWindow() as MsWindow).msCrypto.subtle.digest(\"SHA-256\")\n      );\n    }\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash)) {\n      return;\n    }\n\n    this.operation = this.operation.then(operation => {\n      operation.onerror = () => {\n        this.operation = Promise.reject(\n          new Error(\"Error encountered updating hash\")\n        );\n      };\n      operation.process(toArrayBufferView(toHash));\n\n      return operation;\n    });\n    this.operation.catch(() => {});\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.operation.then<Uint8Array>(\n      operation =>\n        new Promise((resolve, reject) => {\n          operation.onerror = () => {\n            reject(new Error(\"Error encountered finalizing hash\"));\n          };\n          operation.oncomplete = () => {\n            if (operation.result) {\n              resolve(new Uint8Array(operation.result));\n            }\n            reject(new Error(\"Error encountered finalizing hash\"));\n          };\n\n          operation.finish();\n        })\n    );\n  }\n}\n\nfunction getKeyPromise(secret: SourceData): Promise<Key> {\n  return new Promise((resolve, reject) => {\n    const keyOperation = (locateWindow() as MsWindow).msCrypto.subtle.importKey(\n      \"raw\",\n      toArrayBufferView(secret),\n      SHA_256_HMAC_ALGO,\n      false,\n      [\"sign\"]\n    );\n\n    keyOperation.oncomplete = () => {\n      if (keyOperation.result) {\n        resolve(keyOperation.result);\n      }\n\n      reject(new Error(\"ImportKey completed without importing key.\"));\n    };\n    keyOperation.onerror = () => {\n      reject(new Error(\"ImportKey failed to import key.\"));\n    };\n  });\n}\n\nfunction toArrayBufferView(data: SourceData): Uint8Array {\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n","export * from \"./crossPlatformSha256\";\nexport { Sha256 as Ie11Sha256 } from \"./ie11Sha256\";\nexport { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\n","import { SourceData } from \"@aws-sdk/types\";\n\nexport function isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n","import { Hash, SourceData } from \"@aws-sdk/types\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\nimport {\n  EMPTY_DATA_SHA_256,\n  SHA_256_HASH,\n  SHA_256_HMAC_ALGO,\n} from \"./constants\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private readonly key: Promise<CryptoKey> | undefined;\n  private toHash: Uint8Array = new Uint8Array(0);\n\n  constructor(secret?: SourceData) {\n    if (secret !== void 0) {\n      this.key = new Promise((resolve, reject) => {\n        locateWindow()\n          .crypto.subtle.importKey(\n            \"raw\",\n            convertToBuffer(secret),\n            SHA_256_HMAC_ALGO,\n            false,\n            [\"sign\"]\n          )\n          .then(resolve, reject);\n      });\n      this.key.catch(() => {});\n    }\n  }\n\n  update(data: SourceData): void {\n    if (isEmptyData(data)) {\n      return;\n    }\n\n    const update = convertToBuffer(data);\n    const typedArray = new Uint8Array(\n      this.toHash.byteLength + update.byteLength\n    );\n    typedArray.set(this.toHash, 0);\n    typedArray.set(update, this.toHash.byteLength);\n    this.toHash = typedArray;\n  }\n\n  digest(): Promise<Uint8Array> {\n    if (this.key) {\n      return this.key.then((key) =>\n        locateWindow()\n          .crypto.subtle.sign(SHA_256_HMAC_ALGO, key, this.toHash)\n          .then((data) => new Uint8Array(data))\n      );\n    }\n\n    if (isEmptyData(this.toHash)) {\n      return Promise.resolve(EMPTY_DATA_SHA_256);\n    }\n\n    return Promise.resolve()\n      .then(() =>\n        locateWindow().crypto.subtle.digest(SHA_256_HASH, this.toHash)\n      )\n      .then((data) => Promise.resolve(new Uint8Array(data)));\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\n  BLOCK_SIZE,\n  DIGEST_LENGTH,\n  INIT,\n  KEY,\n  MAX_HASHABLE_LENGTH\n} from \"./constants\";\n\n/**\n * @internal\n */\nexport class RawSha256 {\n  private state: Int32Array = Int32Array.from(INIT);\n  private temp: Int32Array = new Int32Array(64);\n  private buffer: Uint8Array = new Uint8Array(64);\n  private bufferLength: number = 0;\n  private bytesHashed: number = 0;\n\n  /**\n   * @internal\n   */\n  finished: boolean = false;\n\n  update(data: Uint8Array): void {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    let position = 0;\n    let { byteLength } = data;\n    this.bytesHashed += byteLength;\n\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  }\n\n  digest(): Uint8Array {\n    if (!this.finished) {\n      const bitsHashed = this.bytesHashed * 8;\n      const bufferView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength\n      );\n\n      const undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(\n        BLOCK_SIZE - 8,\n        Math.floor(bitsHashed / 0x100000000),\n        true\n      );\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n\n      this.hashBuffer();\n\n      this.finished = true;\n    }\n\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    const out = new Uint8Array(DIGEST_LENGTH);\n    for (let i = 0; i < 8; i++) {\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return out;\n  }\n\n  private hashBuffer(): void {\n    const { buffer, state } = this;\n\n    let state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n\n    for (let i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] =\n          ((buffer[i * 4] & 0xff) << 24) |\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\n          (buffer[i * 4 + 3] & 0xff);\n      } else {\n        let u = this.temp[i - 2];\n        const t1 =\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n\n        u = this.temp[i - 15];\n        const t2 =\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n\n        this.temp[i] =\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\n      }\n\n      const t1 =\n        ((((((state4 >>> 6) | (state4 << 26)) ^\n          ((state4 >>> 11) | (state4 << 21)) ^\n          ((state4 >>> 25) | (state4 << 7))) +\n          ((state4 & state5) ^ (~state4 & state6))) |\n          0) +\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n        0;\n\n      const t2 =\n        ((((state0 >>> 2) | (state0 << 30)) ^\n          ((state0 >>> 13) | (state0 << 19)) ^\n          ((state0 >>> 22) | (state0 << 10))) +\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n        0;\n\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = (state3 + t1) | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = (t1 + t2) | 0;\n    }\n\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  }\n}\n","/**\n * @internal\n */\nexport const BLOCK_SIZE: number = 64;\n\n/**\n * @internal\n */\nexport const DIGEST_LENGTH: number = 32;\n\n/**\n * @internal\n */\nexport const KEY = new Uint32Array([\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n]);\n\n/**\n * @internal\n */\nexport const INIT = [\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n];\n\n/**\n * @internal\n */\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\n","export * from \"./jsSha256\";\n","import { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\n\nexport class Sha256 implements Hash {\n  private readonly hash = new RawSha256();\n  private readonly outer?: RawSha256;\n  private error: any;\n\n  constructor(secret?: SourceData) {\n    if (secret) {\n      this.outer = new RawSha256();\n      const inner = bufferFromSecret(secret);\n      const outer = new Uint8Array(BLOCK_SIZE);\n      outer.set(inner);\n\n      for (let i = 0; i < BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n      }\n\n      this.hash.update(inner);\n      this.outer.update(outer);\n\n      // overwrite the copied key in memory\n      for (let i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n      }\n    }\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash) || this.error) {\n      return;\n    }\n\n    try {\n      this.hash.update(convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n  }\n\n  /* This synchronous method keeps compatibility\n   * with the v2 aws-sdk.\n   */\n  digestSync(): Uint8Array {\n    if (this.error) {\n      throw this.error;\n    }\n\n    if (this.outer) {\n      if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n      }\n\n      return this.outer.digest();\n    }\n\n    return this.hash.digest();\n  }\n\n  /* The underlying digest method here is synchronous.\n   * To keep the same interface with the other hash functions\n   * the default is to expose this as an async method.\n   * However, it can sometimes be useful to have a sync method.\n   */\n  async digest(): Promise<Uint8Array> {\n    return this.digestSync();\n  }\n}\n\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\n  let input = convertToBuffer(secret);\n\n  if (input.byteLength > BLOCK_SIZE) {\n    const bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n\n  const buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export * from \"./supportsWebCrypto\";\n","type SubtleCryptoMethod =\n  | \"decrypt\"\n  | \"digest\"\n  | \"encrypt\"\n  | \"exportKey\"\n  | \"generateKey\"\n  | \"importKey\"\n  | \"sign\"\n  | \"verify\";\n\nconst subtleCryptoMethods: Array<SubtleCryptoMethod> = [\n  \"decrypt\",\n  \"digest\",\n  \"encrypt\",\n  \"exportKey\",\n  \"generateKey\",\n  \"importKey\",\n  \"sign\",\n  \"verify\"\n];\n\nexport function supportsWebCrypto(window: Window): boolean {\n  if (\n    supportsSecureRandom(window) &&\n    typeof window.crypto.subtle === \"object\"\n  ) {\n    const { subtle } = window.crypto;\n\n    return supportsSubtleCrypto(subtle);\n  }\n\n  return false;\n}\n\nexport function supportsSecureRandom(window: Window): boolean {\n  if (typeof window === \"object\" && typeof window.crypto === \"object\") {\n    const { getRandomValues } = window.crypto;\n\n    return typeof getRandomValues === \"function\";\n  }\n\n  return false;\n}\n\nexport function supportsSubtleCrypto(subtle: SubtleCrypto) {\n  return (\n    subtle &&\n    subtleCryptoMethods.every(\n      methodName => typeof subtle[methodName] === \"function\"\n    )\n  );\n}\n\nexport async function supportsZeroByteGCM(subtle: SubtleCrypto) {\n  if (!supportsSubtleCrypto(subtle)) return false;\n  try {\n    const key = await subtle.generateKey(\n      { name: \"AES-GCM\", length: 128 },\n      false,\n      [\"encrypt\"]\n    );\n    const zeroByteAuthTag = await subtle.encrypt(\n      {\n        name: \"AES-GCM\",\n        iv: new Uint8Array(Array(12)),\n        additionalData: new Uint8Array(Array(16)),\n        tagLength: 128\n      },\n      key,\n      new Uint8Array(0)\n    );\n    return zeroByteAuthTag.byteLength === 16;\n  } catch {\n    return false;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 as fromUtf8Browser } from \"@aws-sdk/util-utf8-browser\";\n\n// Quick polyfill\nconst fromUtf8 =\n  typeof Buffer !== \"undefined\" && Buffer.from\n    ? (input: string) => Buffer.from(input, \"utf8\")\n    : fromUtf8Browser;\n\nexport function convertToBuffer(data: SourceData): Uint8Array {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport { convertToBuffer } from \"./convertToBuffer\";\nexport { isEmptyData } from \"./isEmptyData\";\nexport { numToUint8 } from \"./numToUint8\";\nexport {uint32ArrayFrom} from './uint32ArrayFrom';\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\n\nexport function isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function numToUint8(num: number) {\n  return new Uint8Array([\n    (num & 0xff000000) >> 24,\n    (num & 0x00ff0000) >> 16,\n    (num & 0x0000ff00) >> 8,\n    num & 0x000000ff,\n  ]);\n}\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// IE 11 does not support Array.from, so we do it manually\nexport function uint32ArrayFrom(a_lookUpTable: Array<number>): Uint32Array {\n  if (!Uint32Array.from) {\n    const return_array = new Uint32Array(a_lookUpTable.length)\n    let a_index = 0\n    while (a_index < a_lookUpTable.length) {\n      return_array[a_index] = a_lookUpTable[a_index]\n      a_index += 1\n    }\n    return return_array\n  }\n  return Uint32Array.from(a_lookUpTable)\n}\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n","export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n","import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        request.headers[\"host\"] = request.hostname;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = \"STANDARD\";\n","export const loggerMiddleware = () => (next, context) => async (args) => {\n    const response = await next(args);\n    const { clientName, commandName, logger, inputFilterSensitiveLog, outputFilterSensitiveLog, dynamoDbDocumentClientOptions = {}, } = context;\n    const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: (overrideInputFilterSensitiveLog ?? inputFilterSensitiveLog)(args.input),\n            output: (overrideOutputFilterSensitiveLog ?? outputFilterSensitiveLog)(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error) => TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n","import { isThrottlingError } from \"@aws-sdk/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nexport const getDefaultRetryToken = (initialRetryTokens, initialRetryDelay, initialRetryCount, options) => {\n    const MAX_CAPACITY = initialRetryTokens;\n    const retryCost = options?.retryCost ?? RETRY_COST;\n    const timeoutRetryCost = options?.timeoutRetryCost ?? TIMEOUT_RETRY_COST;\n    const retryBackoffStrategy = options?.retryBackoffStrategy ?? getDefaultRetryBackoffStrategy();\n    let availableCapacity = initialRetryTokens;\n    let retryDelay = Math.min(MAXIMUM_RETRY_DELAY, initialRetryDelay);\n    let lastRetryCost = undefined;\n    let retryCount = initialRetryCount ?? 0;\n    const getCapacityAmount = (errorType) => (errorType === \"TRANSIENT\" ? timeoutRetryCost : retryCost);\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => retryDelay;\n    const getLastRetryCost = () => lastRetryCost;\n    const hasRetryTokens = (errorType) => getCapacityAmount(errorType) <= availableCapacity;\n    const getRetryTokenCount = (errorInfo) => {\n        const errorType = errorInfo.errorType;\n        if (!hasRetryTokens(errorType)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(errorType);\n        const delayBase = errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE;\n        retryBackoffStrategy.setDelayBase(delayBase);\n        const delayFromErrorType = retryBackoffStrategy.computeNextBackoffDelay(retryCount);\n        if (errorInfo.retryAfterHint) {\n            const delayFromRetryAfterHint = errorInfo.retryAfterHint.getTime() - Date.now();\n            retryDelay = Math.max(delayFromRetryAfterHint || 0, delayFromErrorType);\n        }\n        else {\n            retryDelay = delayFromErrorType;\n        }\n        retryCount++;\n        lastRetryCost = capacityAmount;\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (releaseAmount) => {\n        availableCapacity += releaseAmount ?? NO_RETRY_INCREMENT;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getLastRetryCost,\n        hasRetryTokens,\n        getRetryTokenCount,\n        releaseRetryTokens,\n    };\n};\n","export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n","import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS } from \"./constants\";\nimport { getDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttemptsProvider) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.STANDARD;\n        this.retryToken = getDefaultRetryToken(INITIAL_RETRY_TOKENS, DEFAULT_RETRY_DELAY_BASE);\n        this.maxAttemptsProvider = maxAttemptsProvider;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return this.retryToken;\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(tokenToRenew, errorInfo, maxAttempts)) {\n            tokenToRenew.getRetryTokenCount(errorInfo);\n            return tokenToRenew;\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.retryToken.releaseRetryTokens(token.getLastRetryCost());\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount();\n        return (attempts < maxAttempts &&\n            tokenToRenew.hasRetryTokens(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n","import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@aws-sdk/service-error-classification\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@aws-sdk/util-retry\";\nimport { v4 } from \"uuid\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        if (HttpRequest.isInstance(request)) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (HttpRequest.isInstance(request)) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetyErrorInto(e);\n                lastError = asSdkError(e);\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetyErrorInto = (error) => {\n    const errorInfo = {\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n","export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","export class ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"ProviderError\";\n        Object.setPrototypeOf(this, ProviderError.prototype);\n    }\n    static from(error, tryNextLink = true) {\n        return Object.assign(new this(error.message, tryNextLink), error);\n    }\n}\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(data);\n    return hash.digest();\n};\n","import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(body);\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n","export const cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n});\nexport const cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\n","import { cloneRequest } from \"./cloneRequest\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n","import { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n","export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n","import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(stringToSign);\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(canonicalRequest);\n        const hashedRequest = await hash.digest();\n        return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(stringToSign);\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nconst formatDate = (now) => {\n    const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n","import { memoize } from \"@aws-sdk/property-provider\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nexport const resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else if (input.regionInfoProvider) {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: input.signingName || input.defaultSigningName,\n                signingRegion: await normalizeProvider(input.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            input.signingRegion = input.signingRegion || signingRegion;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexport const resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n","export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n","import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n","import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n","import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { getSkewCorrectedDate } from \"./utils/getSkewCorrectedDate\";\nimport { getUpdatedSystemClockOffset } from \"./utils/getUpdatedSystemClockOffset\";\nexport const awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const multiRegionOverride = authScheme?.name === \"sigv4a\" ? authScheme?.signingRegionSet?.join(\",\") : undefined;\n    const signer = await options.signer(authScheme);\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: getSkewCorrectedDate(options.systemClockOffset),\n            signingRegion: multiRegionOverride || context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nconst getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\nexport const awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nexport const getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n    },\n});\nexport const getSigV4AuthPlugin = getAwsAuthPlugin;\n","export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const sdkUserAgentValue = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item?.replace(UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n","import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","export function requestTimeout(timeoutInMs = 0) {\n    return new Promise((resolve, reject) => {\n        if (timeoutInMs) {\n            setTimeout(() => {\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n                timeoutError.name = \"TimeoutError\";\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n","const alphabetByEncoding = {};\nconst alphabetByValue = new Array(64);\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    alphabetByEncoding[char] = i;\n    alphabetByValue[i] = char;\n}\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    const index = i + 26;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nfor (let i = 0; i < 10; i++) {\n    alphabetByEncoding[i.toString(10)] = i + 52;\n    const char = i.toString(10);\n    const index = i + 52;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\nconst bitsPerLetter = 6;\nconst bitsPerByte = 8;\nconst maxLetterValue = 0b111111;\nexport { alphabetByEncoding, alphabetByValue, bitsPerLetter, bitsPerByte, maxLetterValue };\n","import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { requestTimeout } from \"./request-timeout\";\nexport class FetchHttpHandler {\n    constructor(options) {\n        if (typeof options === \"function\") {\n            this.configProvider = options().then((opts) => opts || {});\n        }\n        else {\n            this.config = options ?? {};\n            this.configProvider = Promise.resolve(this.config);\n        }\n    }\n    destroy() {\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const requestTimeoutInMs = this.config.requestTimeout;\n        if (abortSignal?.aborted) {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            return Promise.reject(abortError);\n        }\n        let path = request.path;\n        if (request.query) {\n            const queryString = buildQueryString(request.query);\n            if (queryString) {\n                path += `?${queryString}`;\n            }\n        }\n        const { port, method } = request;\n        const url = `${request.protocol}//${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n        const requestOptions = {\n            body,\n            headers: new Headers(request.headers),\n            method: method,\n        };\n        if (typeof AbortController !== \"undefined\") {\n            requestOptions[\"signal\"] = abortSignal;\n        }\n        const fetchRequest = new Request(url, requestOptions);\n        const raceOfPromises = [\n            fetch(fetchRequest).then((response) => {\n                const fetchHeaders = response.headers;\n                const transformedHeaders = {};\n                for (const pair of fetchHeaders.entries()) {\n                    transformedHeaders[pair[0]] = pair[1];\n                }\n                const hasReadableStream = response.body !== undefined;\n                if (!hasReadableStream) {\n                    return response.blob().then((body) => ({\n                        response: new HttpResponse({\n                            headers: transformedHeaders,\n                            statusCode: response.status,\n                            body,\n                        }),\n                    }));\n                }\n                return {\n                    response: new HttpResponse({\n                        headers: transformedHeaders,\n                        statusCode: response.status,\n                        body: response.body,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        if (abortSignal) {\n            raceOfPromises.push(new Promise((resolve, reject) => {\n                abortSignal.onabort = () => {\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }));\n        }\n        return Promise.race(raceOfPromises);\n    }\n}\n","import { alphabetByEncoding, bitsPerByte, bitsPerLetter } from \"./constants.browser\";\nexport const fromBase64 = (input) => {\n    let totalByteLength = (input.length / 4) * 3;\n    if (input.slice(-2) === \"==\") {\n        totalByteLength -= 2;\n    }\n    else if (input.slice(-1) === \"=\") {\n        totalByteLength--;\n    }\n    const out = new ArrayBuffer(totalByteLength);\n    const dataView = new DataView(out);\n    for (let i = 0; i < input.length; i += 4) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = i + 3; j <= limit; j++) {\n            if (input[j] !== \"=\") {\n                if (!(input[j] in alphabetByEncoding)) {\n                    throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\n                }\n                bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\n                bitLength += bitsPerLetter;\n            }\n            else {\n                bits >>= bitsPerLetter;\n            }\n        }\n        const chunkOffset = (i / 4) * 3;\n        bits >>= bitLength % bitsPerByte;\n        const byteLength = Math.floor(bitLength / bitsPerByte);\n        for (let k = 0; k < byteLength; k++) {\n            const offset = (byteLength - k - 1) * bitsPerByte;\n            dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\n        }\n    }\n    return new Uint8Array(out);\n};\n","import { alphabetByValue, bitsPerByte, bitsPerLetter, maxLetterValue } from \"./constants.browser\";\nexport function toBase64(input) {\n    let str = \"\";\n    for (let i = 0; i < input.length; i += 3) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n            bits |= input[j] << ((limit - j - 1) * bitsPerByte);\n            bitLength += bitsPerByte;\n        }\n        const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n        bits <<= bitClusterCount * bitsPerLetter - bitLength;\n        for (let k = 1; k <= bitClusterCount; k++) {\n            const offset = (bitClusterCount - k) * bitsPerLetter;\n            str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\n        }\n        str += \"==\".slice(0, 4 - bitClusterCount);\n    }\n    return str;\n}\n","import { fromBase64 } from \"@aws-sdk/util-base64\";\nexport const streamCollector = (stream) => {\n    if (typeof Blob === \"function\" && stream instanceof Blob) {\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    let res = new Uint8Array(0);\n    const reader = stream.getReader();\n    let isDone = false;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            const prior = res;\n            res = new Uint8Array(prior.length + value.length);\n            res.set(prior);\n            res.set(value, prior.length);\n        }\n        isDone = done;\n    }\n    return res;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n","export const invalidProvider = (message) => () => Promise.reject(message);\n","export const calculateBodyLength = (body) => {\n    if (typeof body === \"string\") {\n        let len = body.length;\n        for (let i = len - 1; i >= 0; i--) {\n            const code = body.charCodeAt(i);\n            if (code > 0x7f && code <= 0x7ff)\n                len++;\n            else if (code > 0x7ff && code <= 0xffff)\n                len += 2;\n            if (code >= 0xdc00 && code <= 0xdfff)\n                i--;\n        }\n        return len;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n","import bowser from \"bowser\";\nexport const defaultUserAgent = ({ serviceId, clientVersion }) => async () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [`os/${parsedUA?.os?.name || \"other\"}`, parsedUA?.os?.version],\n        [\"lang/js\"],\n        [\"md/browser\", `${parsedUA?.browser?.name ?? \"unknown\"}_${parsedUA?.browser?.version ?? \"unknown\"}`],\n    ];\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    return sections;\n};\n","import partitionsInfo from \"./partitions.json\";\nconst { partitions } = partitionsInfo;\nconst DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\nexport const partition = (value) => {\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\n","export const debugId = \"endpoints\";\n","export function toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n","export class EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nexport const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n","const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nexport const isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n","import { isIpAddress } from \"../isIpAddress\";\nimport { isValidHostLabel } from \"../isValidHostLabel\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n","export const parseArn = (value) => {\n    const segments = value.split(\":\");\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourceId] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourceId[0] === \"\")\n        return null;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId: resourceId[0].includes(\"/\") ? resourceId[0].split(\"/\") : resourceId,\n    };\n};\n","export const booleanEquals = (value1, value2) => value1 === value2;\n","import { EndpointError } from \"../types\";\nimport { getAttrPathList } from \"./getAttrPathList\";\nexport const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n","import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n","export const isSet = (value) => value != null;\n","export const not = (value) => !value;\n","import { EndpointURLScheme } from \"@aws-sdk/types\";\nimport { isIpAddress } from \"./isIpAddress\";\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nexport const parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n","export const stringEquals = (value1, value2) => value1 === value2;\n","export const substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n","export const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n","import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n","import { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getReferenceValue } from \"./getReferenceValue\";\nexport const evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n","export const getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n","import * as lib from \"../lib\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    return fn.split(\".\").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nexport const evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(debugId, `evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(debugId, `assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nexport const getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n","import { getEndpointProperty } from \"./getEndpointProperty\";\nexport const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(debugId, `Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n","import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n","import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(debugId, `Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    if (options.endpointParams?.Endpoint) {\n        try {\n            const givenEndpoint = new URL(options.endpointParams.Endpoint);\n            const { protocol, port } = givenEndpoint;\n            endpoint.url.protocol = protocol;\n            endpoint.url.port = port;\n        }\n        catch (e) {\n        }\n    }\n    options.logger?.debug?.(debugId, `Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n","const p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://email-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://email-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://email.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://email.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","export const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\n","import { memoize } from \"@aws-sdk/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n        case \"mobile\":\n        case \"in-region\":\n        case \"cross-region\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst isMobileBrowser = () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const platform = parsedUA?.platform?.type;\n    return platform === \"tablet\" || platform === \"mobile\";\n};\n","import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@aws-sdk/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2010-12-01\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SES\",\n    urlParser: config?.urlParser ?? parseUrl,\n});\n","import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class SESClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveAwsAuthConfig(_config_5);\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        super(_config_7);\n        this.config = _config_7;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","export function resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\n","import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"ses\",\n    };\n};\n","import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@aws-sdk/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy } = input;\n    const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(input.retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n","import { SESServiceException as __BaseException } from \"./SESServiceException\";\nexport class AccountSendingPausedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AccountSendingPausedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AccountSendingPausedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AccountSendingPausedException.prototype);\n    }\n}\nexport class AlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AlreadyExistsException.prototype);\n        this.Name = opts.Name;\n    }\n}\nexport var BehaviorOnMXFailure;\n(function (BehaviorOnMXFailure) {\n    BehaviorOnMXFailure[\"RejectMessage\"] = \"RejectMessage\";\n    BehaviorOnMXFailure[\"UseDefaultValue\"] = \"UseDefaultValue\";\n})(BehaviorOnMXFailure || (BehaviorOnMXFailure = {}));\nexport var BounceType;\n(function (BounceType) {\n    BounceType[\"ContentRejected\"] = \"ContentRejected\";\n    BounceType[\"DoesNotExist\"] = \"DoesNotExist\";\n    BounceType[\"ExceededQuota\"] = \"ExceededQuota\";\n    BounceType[\"MessageTooLarge\"] = \"MessageTooLarge\";\n    BounceType[\"TemporaryFailure\"] = \"TemporaryFailure\";\n    BounceType[\"Undefined\"] = \"Undefined\";\n})(BounceType || (BounceType = {}));\nexport var DsnAction;\n(function (DsnAction) {\n    DsnAction[\"DELAYED\"] = \"delayed\";\n    DsnAction[\"DELIVERED\"] = \"delivered\";\n    DsnAction[\"EXPANDED\"] = \"expanded\";\n    DsnAction[\"FAILED\"] = \"failed\";\n    DsnAction[\"RELAYED\"] = \"relayed\";\n})(DsnAction || (DsnAction = {}));\nexport var BulkEmailStatus;\n(function (BulkEmailStatus) {\n    BulkEmailStatus[\"AccountDailyQuotaExceeded\"] = \"AccountDailyQuotaExceeded\";\n    BulkEmailStatus[\"AccountSendingPaused\"] = \"AccountSendingPaused\";\n    BulkEmailStatus[\"AccountSuspended\"] = \"AccountSuspended\";\n    BulkEmailStatus[\"AccountThrottled\"] = \"AccountThrottled\";\n    BulkEmailStatus[\"ConfigurationSetDoesNotExist\"] = \"ConfigurationSetDoesNotExist\";\n    BulkEmailStatus[\"ConfigurationSetSendingPaused\"] = \"ConfigurationSetSendingPaused\";\n    BulkEmailStatus[\"Failed\"] = \"Failed\";\n    BulkEmailStatus[\"InvalidParameterValue\"] = \"InvalidParameterValue\";\n    BulkEmailStatus[\"InvalidSendingPoolName\"] = \"InvalidSendingPoolName\";\n    BulkEmailStatus[\"MailFromDomainNotVerified\"] = \"MailFromDomainNotVerified\";\n    BulkEmailStatus[\"MessageRejected\"] = \"MessageRejected\";\n    BulkEmailStatus[\"Success\"] = \"Success\";\n    BulkEmailStatus[\"TemplateDoesNotExist\"] = \"TemplateDoesNotExist\";\n    BulkEmailStatus[\"TransientFailure\"] = \"TransientFailure\";\n})(BulkEmailStatus || (BulkEmailStatus = {}));\nexport class CannotDeleteException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"CannotDeleteException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CannotDeleteException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CannotDeleteException.prototype);\n        this.Name = opts.Name;\n    }\n}\nexport class LimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"LimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n    }\n}\nexport class RuleSetDoesNotExistException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RuleSetDoesNotExistException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RuleSetDoesNotExistException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RuleSetDoesNotExistException.prototype);\n        this.Name = opts.Name;\n    }\n}\nexport var DimensionValueSource;\n(function (DimensionValueSource) {\n    DimensionValueSource[\"EMAIL_HEADER\"] = \"emailHeader\";\n    DimensionValueSource[\"LINK_TAG\"] = \"linkTag\";\n    DimensionValueSource[\"MESSAGE_TAG\"] = \"messageTag\";\n})(DimensionValueSource || (DimensionValueSource = {}));\nexport class ConfigurationSetAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ConfigurationSetAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ConfigurationSetAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ConfigurationSetAlreadyExistsException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n    }\n}\nexport var ConfigurationSetAttribute;\n(function (ConfigurationSetAttribute) {\n    ConfigurationSetAttribute[\"DELIVERY_OPTIONS\"] = \"deliveryOptions\";\n    ConfigurationSetAttribute[\"EVENT_DESTINATIONS\"] = \"eventDestinations\";\n    ConfigurationSetAttribute[\"REPUTATION_OPTIONS\"] = \"reputationOptions\";\n    ConfigurationSetAttribute[\"TRACKING_OPTIONS\"] = \"trackingOptions\";\n})(ConfigurationSetAttribute || (ConfigurationSetAttribute = {}));\nexport class ConfigurationSetDoesNotExistException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ConfigurationSetDoesNotExistException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ConfigurationSetDoesNotExistException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ConfigurationSetDoesNotExistException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n    }\n}\nexport class ConfigurationSetSendingPausedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ConfigurationSetSendingPausedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ConfigurationSetSendingPausedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ConfigurationSetSendingPausedException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n    }\n}\nexport class InvalidConfigurationSetException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidConfigurationSetException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidConfigurationSetException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidConfigurationSetException.prototype);\n    }\n}\nexport var EventType;\n(function (EventType) {\n    EventType[\"BOUNCE\"] = \"bounce\";\n    EventType[\"CLICK\"] = \"click\";\n    EventType[\"COMPLAINT\"] = \"complaint\";\n    EventType[\"DELIVERY\"] = \"delivery\";\n    EventType[\"OPEN\"] = \"open\";\n    EventType[\"REJECT\"] = \"reject\";\n    EventType[\"RENDERING_FAILURE\"] = \"renderingFailure\";\n    EventType[\"SEND\"] = \"send\";\n})(EventType || (EventType = {}));\nexport class EventDestinationAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"EventDestinationAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"EventDestinationAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, EventDestinationAlreadyExistsException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n        this.EventDestinationName = opts.EventDestinationName;\n    }\n}\nexport class InvalidCloudWatchDestinationException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidCloudWatchDestinationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidCloudWatchDestinationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidCloudWatchDestinationException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n        this.EventDestinationName = opts.EventDestinationName;\n    }\n}\nexport class InvalidFirehoseDestinationException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidFirehoseDestinationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidFirehoseDestinationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFirehoseDestinationException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n        this.EventDestinationName = opts.EventDestinationName;\n    }\n}\nexport class InvalidSNSDestinationException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidSNSDestinationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidSNSDestinationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidSNSDestinationException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n        this.EventDestinationName = opts.EventDestinationName;\n    }\n}\nexport class InvalidTrackingOptionsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTrackingOptionsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTrackingOptionsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTrackingOptionsException.prototype);\n    }\n}\nexport class TrackingOptionsAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TrackingOptionsAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TrackingOptionsAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TrackingOptionsAlreadyExistsException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n    }\n}\nexport class CustomVerificationEmailInvalidContentException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"CustomVerificationEmailInvalidContentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CustomVerificationEmailInvalidContentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CustomVerificationEmailInvalidContentException.prototype);\n    }\n}\nexport class CustomVerificationEmailTemplateAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"CustomVerificationEmailTemplateAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CustomVerificationEmailTemplateAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CustomVerificationEmailTemplateAlreadyExistsException.prototype);\n        this.CustomVerificationEmailTemplateName = opts.CustomVerificationEmailTemplateName;\n    }\n}\nexport class FromEmailAddressNotVerifiedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"FromEmailAddressNotVerifiedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FromEmailAddressNotVerifiedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FromEmailAddressNotVerifiedException.prototype);\n        this.FromEmailAddress = opts.FromEmailAddress;\n    }\n}\nexport var ReceiptFilterPolicy;\n(function (ReceiptFilterPolicy) {\n    ReceiptFilterPolicy[\"Allow\"] = \"Allow\";\n    ReceiptFilterPolicy[\"Block\"] = \"Block\";\n})(ReceiptFilterPolicy || (ReceiptFilterPolicy = {}));\nexport var SNSActionEncoding;\n(function (SNSActionEncoding) {\n    SNSActionEncoding[\"Base64\"] = \"Base64\";\n    SNSActionEncoding[\"UTF8\"] = \"UTF-8\";\n})(SNSActionEncoding || (SNSActionEncoding = {}));\nexport var StopScope;\n(function (StopScope) {\n    StopScope[\"RULE_SET\"] = \"RuleSet\";\n})(StopScope || (StopScope = {}));\nexport var TlsPolicy;\n(function (TlsPolicy) {\n    TlsPolicy[\"Optional\"] = \"Optional\";\n    TlsPolicy[\"Require\"] = \"Require\";\n})(TlsPolicy || (TlsPolicy = {}));\nexport class InvalidLambdaFunctionException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidLambdaFunctionException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidLambdaFunctionException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidLambdaFunctionException.prototype);\n        this.FunctionArn = opts.FunctionArn;\n    }\n}\nexport class InvalidS3ConfigurationException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidS3ConfigurationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidS3ConfigurationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidS3ConfigurationException.prototype);\n        this.Bucket = opts.Bucket;\n    }\n}\nexport class InvalidSnsTopicException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidSnsTopicException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidSnsTopicException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidSnsTopicException.prototype);\n        this.Topic = opts.Topic;\n    }\n}\nexport class RuleDoesNotExistException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RuleDoesNotExistException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RuleDoesNotExistException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RuleDoesNotExistException.prototype);\n        this.Name = opts.Name;\n    }\n}\nexport class InvalidTemplateException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTemplateException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTemplateException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTemplateException.prototype);\n        this.TemplateName = opts.TemplateName;\n    }\n}\nexport var CustomMailFromStatus;\n(function (CustomMailFromStatus) {\n    CustomMailFromStatus[\"Failed\"] = \"Failed\";\n    CustomMailFromStatus[\"Pending\"] = \"Pending\";\n    CustomMailFromStatus[\"Success\"] = \"Success\";\n    CustomMailFromStatus[\"TemporaryFailure\"] = \"TemporaryFailure\";\n})(CustomMailFromStatus || (CustomMailFromStatus = {}));\nexport class CustomVerificationEmailTemplateDoesNotExistException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"CustomVerificationEmailTemplateDoesNotExistException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CustomVerificationEmailTemplateDoesNotExistException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CustomVerificationEmailTemplateDoesNotExistException.prototype);\n        this.CustomVerificationEmailTemplateName = opts.CustomVerificationEmailTemplateName;\n    }\n}\nexport class EventDestinationDoesNotExistException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"EventDestinationDoesNotExistException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"EventDestinationDoesNotExistException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, EventDestinationDoesNotExistException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n        this.EventDestinationName = opts.EventDestinationName;\n    }\n}\nexport class TrackingOptionsDoesNotExistException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TrackingOptionsDoesNotExistException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TrackingOptionsDoesNotExistException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TrackingOptionsDoesNotExistException.prototype);\n        this.ConfigurationSetName = opts.ConfigurationSetName;\n    }\n}\nexport class TemplateDoesNotExistException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TemplateDoesNotExistException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TemplateDoesNotExistException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TemplateDoesNotExistException.prototype);\n        this.TemplateName = opts.TemplateName;\n    }\n}\nexport class InvalidDeliveryOptionsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDeliveryOptionsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDeliveryOptionsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDeliveryOptionsException.prototype);\n    }\n}\nexport class InvalidPolicyException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidPolicyException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidPolicyException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidPolicyException.prototype);\n    }\n}\nexport class InvalidRenderingParameterException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRenderingParameterException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRenderingParameterException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRenderingParameterException.prototype);\n        this.TemplateName = opts.TemplateName;\n    }\n}\nexport class MailFromDomainNotVerifiedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MailFromDomainNotVerifiedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MailFromDomainNotVerifiedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MailFromDomainNotVerifiedException.prototype);\n    }\n}\nexport class MessageRejected extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MessageRejected\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MessageRejected\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MessageRejected.prototype);\n    }\n}\nexport class MissingRenderingAttributeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MissingRenderingAttributeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MissingRenderingAttributeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MissingRenderingAttributeException.prototype);\n        this.TemplateName = opts.TemplateName;\n    }\n}\nexport class ProductionAccessNotGrantedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ProductionAccessNotGrantedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ProductionAccessNotGrantedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ProductionAccessNotGrantedException.prototype);\n    }\n}\nexport const AddHeaderActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ContentFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BodyFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BounceActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ExtensionFieldFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RecipientDsnFieldsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BouncedRecipientInfoFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const MessageTagFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BulkEmailDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BulkEmailDestinationStatusFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CloneReceiptRuleSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CloneReceiptRuleSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CloudWatchDimensionConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CloudWatchDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ConfigurationSetFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateConfigurationSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateConfigurationSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const KinesisFirehoseDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SNSDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const EventDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateConfigurationSetEventDestinationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateConfigurationSetEventDestinationResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TrackingOptionsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateConfigurationSetTrackingOptionsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateConfigurationSetTrackingOptionsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateCustomVerificationEmailTemplateRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReceiptIpFilterFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReceiptFilterFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateReceiptFilterRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateReceiptFilterResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const LambdaActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const S3ActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SNSActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const StopActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const WorkmailActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReceiptActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReceiptRuleFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateReceiptRuleRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateReceiptRuleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateReceiptRuleSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateReceiptRuleSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TemplateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateTemplateRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateTemplateResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CustomVerificationEmailTemplateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteConfigurationSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteConfigurationSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteConfigurationSetEventDestinationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteConfigurationSetEventDestinationResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteConfigurationSetTrackingOptionsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteConfigurationSetTrackingOptionsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteCustomVerificationEmailTemplateRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteIdentityPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteIdentityPolicyResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteReceiptFilterRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteReceiptFilterResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteReceiptRuleRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteReceiptRuleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteReceiptRuleSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteReceiptRuleSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteTemplateRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteTemplateResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteVerifiedEmailAddressRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeliveryOptionsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeActiveReceiptRuleSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReceiptRuleSetMetadataFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeActiveReceiptRuleSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeConfigurationSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReputationOptionsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeConfigurationSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeReceiptRuleRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeReceiptRuleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeReceiptRuleSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeReceiptRuleSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const IdentityDkimAttributesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetAccountSendingEnabledResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetCustomVerificationEmailTemplateRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetCustomVerificationEmailTemplateResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityDkimAttributesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityDkimAttributesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityMailFromDomainAttributesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const IdentityMailFromDomainAttributesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityMailFromDomainAttributesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityNotificationAttributesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const IdentityNotificationAttributesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityNotificationAttributesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityPoliciesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityPoliciesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityVerificationAttributesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const IdentityVerificationAttributesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetIdentityVerificationAttributesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetSendQuotaResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendDataPointFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetSendStatisticsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetTemplateRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetTemplateResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListConfigurationSetsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListConfigurationSetsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListCustomVerificationEmailTemplatesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListCustomVerificationEmailTemplatesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListIdentitiesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListIdentitiesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListIdentityPoliciesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListIdentityPoliciesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListReceiptFiltersRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListReceiptFiltersResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListReceiptRuleSetsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListReceiptRuleSetsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListTemplatesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TemplateMetadataFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListTemplatesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListVerifiedEmailAddressesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const MessageFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const MessageDsnFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const PutConfigurationSetDeliveryOptionsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const PutConfigurationSetDeliveryOptionsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const PutIdentityPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const PutIdentityPolicyResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RawMessageFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReorderReceiptRuleSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReorderReceiptRuleSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendBounceRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendBounceResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendBulkTemplatedEmailRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendBulkTemplatedEmailResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendCustomVerificationEmailRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendCustomVerificationEmailResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendEmailRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendEmailResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendRawEmailRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendRawEmailResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendTemplatedEmailRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SendTemplatedEmailResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetActiveReceiptRuleSetRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetActiveReceiptRuleSetResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityDkimEnabledRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityDkimEnabledResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityFeedbackForwardingEnabledRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityFeedbackForwardingEnabledResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityHeadersInNotificationsEnabledRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityHeadersInNotificationsEnabledResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityMailFromDomainRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityMailFromDomainResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityNotificationTopicRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetIdentityNotificationTopicResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetReceiptRulePositionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SetReceiptRulePositionResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TestRenderTemplateRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TestRenderTemplateResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateAccountSendingEnabledRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateConfigurationSetEventDestinationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateConfigurationSetEventDestinationResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateConfigurationSetReputationMetricsEnabledRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateConfigurationSetSendingEnabledRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateConfigurationSetTrackingOptionsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateConfigurationSetTrackingOptionsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateCustomVerificationEmailTemplateRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateReceiptRuleRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateReceiptRuleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateTemplateRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateTemplateResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const VerifyDomainDkimRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const VerifyDomainDkimResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const VerifyDomainIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const VerifyDomainIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const VerifyEmailAddressRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const VerifyEmailIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const VerifyEmailIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class SESServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SESServiceException.prototype);\n    }\n}\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode, parseBoolean as __parseBoolean, parseRfc3339DateTime as __parseRfc3339DateTime, strictParseFloat as __strictParseFloat, strictParseLong as __strictParseLong, throwDefaultError, } from \"@aws-sdk/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { AccountSendingPausedException, AlreadyExistsException, CannotDeleteException, ConfigurationSetAlreadyExistsException, ConfigurationSetDoesNotExistException, ConfigurationSetSendingPausedException, CustomVerificationEmailInvalidContentException, CustomVerificationEmailTemplateAlreadyExistsException, CustomVerificationEmailTemplateDoesNotExistException, EventDestinationAlreadyExistsException, EventDestinationDoesNotExistException, FromEmailAddressNotVerifiedException, InvalidCloudWatchDestinationException, InvalidConfigurationSetException, InvalidDeliveryOptionsException, InvalidFirehoseDestinationException, InvalidLambdaFunctionException, InvalidPolicyException, InvalidRenderingParameterException, InvalidS3ConfigurationException, InvalidSNSDestinationException, InvalidSnsTopicException, InvalidTemplateException, InvalidTrackingOptionsException, LimitExceededException, MailFromDomainNotVerifiedException, MessageRejected, MissingRenderingAttributeException, ProductionAccessNotGrantedException, RuleDoesNotExistException, RuleSetDoesNotExistException, TemplateDoesNotExistException, TrackingOptionsAlreadyExistsException, TrackingOptionsDoesNotExistException, } from \"../models/models_0\";\nimport { SESServiceException as __BaseException } from \"../models/SESServiceException\";\nexport const serializeAws_queryCloneReceiptRuleSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCloneReceiptRuleSetRequest(input, context),\n        Action: \"CloneReceiptRuleSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryCreateConfigurationSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateConfigurationSetRequest(input, context),\n        Action: \"CreateConfigurationSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryCreateConfigurationSetEventDestinationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateConfigurationSetEventDestinationRequest(input, context),\n        Action: \"CreateConfigurationSetEventDestination\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryCreateConfigurationSetTrackingOptionsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateConfigurationSetTrackingOptionsRequest(input, context),\n        Action: \"CreateConfigurationSetTrackingOptions\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryCreateCustomVerificationEmailTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateCustomVerificationEmailTemplateRequest(input, context),\n        Action: \"CreateCustomVerificationEmailTemplate\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryCreateReceiptFilterCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateReceiptFilterRequest(input, context),\n        Action: \"CreateReceiptFilter\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryCreateReceiptRuleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateReceiptRuleRequest(input, context),\n        Action: \"CreateReceiptRule\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryCreateReceiptRuleSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateReceiptRuleSetRequest(input, context),\n        Action: \"CreateReceiptRuleSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryCreateTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateTemplateRequest(input, context),\n        Action: \"CreateTemplate\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteConfigurationSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteConfigurationSetRequest(input, context),\n        Action: \"DeleteConfigurationSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteConfigurationSetEventDestinationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteConfigurationSetEventDestinationRequest(input, context),\n        Action: \"DeleteConfigurationSetEventDestination\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteConfigurationSetTrackingOptionsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteConfigurationSetTrackingOptionsRequest(input, context),\n        Action: \"DeleteConfigurationSetTrackingOptions\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteCustomVerificationEmailTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteCustomVerificationEmailTemplateRequest(input, context),\n        Action: \"DeleteCustomVerificationEmailTemplate\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteIdentityRequest(input, context),\n        Action: \"DeleteIdentity\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteIdentityPolicyCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteIdentityPolicyRequest(input, context),\n        Action: \"DeleteIdentityPolicy\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteReceiptFilterCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteReceiptFilterRequest(input, context),\n        Action: \"DeleteReceiptFilter\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteReceiptRuleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteReceiptRuleRequest(input, context),\n        Action: \"DeleteReceiptRule\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteReceiptRuleSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteReceiptRuleSetRequest(input, context),\n        Action: \"DeleteReceiptRuleSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteTemplateRequest(input, context),\n        Action: \"DeleteTemplate\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDeleteVerifiedEmailAddressCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteVerifiedEmailAddressRequest(input, context),\n        Action: \"DeleteVerifiedEmailAddress\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDescribeActiveReceiptRuleSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeActiveReceiptRuleSetRequest(input, context),\n        Action: \"DescribeActiveReceiptRuleSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDescribeConfigurationSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeConfigurationSetRequest(input, context),\n        Action: \"DescribeConfigurationSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDescribeReceiptRuleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeReceiptRuleRequest(input, context),\n        Action: \"DescribeReceiptRule\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDescribeReceiptRuleSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeReceiptRuleSetRequest(input, context),\n        Action: \"DescribeReceiptRuleSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetAccountSendingEnabledCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    const body = buildFormUrlencodedString({\n        Action: \"GetAccountSendingEnabled\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetCustomVerificationEmailTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetCustomVerificationEmailTemplateRequest(input, context),\n        Action: \"GetCustomVerificationEmailTemplate\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetIdentityDkimAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetIdentityDkimAttributesRequest(input, context),\n        Action: \"GetIdentityDkimAttributes\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetIdentityMailFromDomainAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetIdentityMailFromDomainAttributesRequest(input, context),\n        Action: \"GetIdentityMailFromDomainAttributes\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetIdentityNotificationAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetIdentityNotificationAttributesRequest(input, context),\n        Action: \"GetIdentityNotificationAttributes\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetIdentityPoliciesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetIdentityPoliciesRequest(input, context),\n        Action: \"GetIdentityPolicies\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetIdentityVerificationAttributesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetIdentityVerificationAttributesRequest(input, context),\n        Action: \"GetIdentityVerificationAttributes\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetSendQuotaCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    const body = buildFormUrlencodedString({\n        Action: \"GetSendQuota\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetSendStatisticsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    const body = buildFormUrlencodedString({\n        Action: \"GetSendStatistics\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetTemplateRequest(input, context),\n        Action: \"GetTemplate\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryListConfigurationSetsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListConfigurationSetsRequest(input, context),\n        Action: \"ListConfigurationSets\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryListCustomVerificationEmailTemplatesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListCustomVerificationEmailTemplatesRequest(input, context),\n        Action: \"ListCustomVerificationEmailTemplates\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryListIdentitiesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListIdentitiesRequest(input, context),\n        Action: \"ListIdentities\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryListIdentityPoliciesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListIdentityPoliciesRequest(input, context),\n        Action: \"ListIdentityPolicies\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryListReceiptFiltersCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListReceiptFiltersRequest(input, context),\n        Action: \"ListReceiptFilters\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryListReceiptRuleSetsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListReceiptRuleSetsRequest(input, context),\n        Action: \"ListReceiptRuleSets\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryListTemplatesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListTemplatesRequest(input, context),\n        Action: \"ListTemplates\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryListVerifiedEmailAddressesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    const body = buildFormUrlencodedString({\n        Action: \"ListVerifiedEmailAddresses\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryPutConfigurationSetDeliveryOptionsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryPutConfigurationSetDeliveryOptionsRequest(input, context),\n        Action: \"PutConfigurationSetDeliveryOptions\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryPutIdentityPolicyCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryPutIdentityPolicyRequest(input, context),\n        Action: \"PutIdentityPolicy\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryReorderReceiptRuleSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryReorderReceiptRuleSetRequest(input, context),\n        Action: \"ReorderReceiptRuleSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySendBounceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySendBounceRequest(input, context),\n        Action: \"SendBounce\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySendBulkTemplatedEmailCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySendBulkTemplatedEmailRequest(input, context),\n        Action: \"SendBulkTemplatedEmail\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySendCustomVerificationEmailCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySendCustomVerificationEmailRequest(input, context),\n        Action: \"SendCustomVerificationEmail\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySendEmailCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySendEmailRequest(input, context),\n        Action: \"SendEmail\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySendRawEmailCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySendRawEmailRequest(input, context),\n        Action: \"SendRawEmail\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySendTemplatedEmailCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySendTemplatedEmailRequest(input, context),\n        Action: \"SendTemplatedEmail\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySetActiveReceiptRuleSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetActiveReceiptRuleSetRequest(input, context),\n        Action: \"SetActiveReceiptRuleSet\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySetIdentityDkimEnabledCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetIdentityDkimEnabledRequest(input, context),\n        Action: \"SetIdentityDkimEnabled\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySetIdentityFeedbackForwardingEnabledCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetIdentityFeedbackForwardingEnabledRequest(input, context),\n        Action: \"SetIdentityFeedbackForwardingEnabled\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySetIdentityHeadersInNotificationsEnabledCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetIdentityHeadersInNotificationsEnabledRequest(input, context),\n        Action: \"SetIdentityHeadersInNotificationsEnabled\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySetIdentityMailFromDomainCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetIdentityMailFromDomainRequest(input, context),\n        Action: \"SetIdentityMailFromDomain\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySetIdentityNotificationTopicCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetIdentityNotificationTopicRequest(input, context),\n        Action: \"SetIdentityNotificationTopic\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_querySetReceiptRulePositionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetReceiptRulePositionRequest(input, context),\n        Action: \"SetReceiptRulePosition\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryTestRenderTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryTestRenderTemplateRequest(input, context),\n        Action: \"TestRenderTemplate\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryUpdateAccountSendingEnabledCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateAccountSendingEnabledRequest(input, context),\n        Action: \"UpdateAccountSendingEnabled\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryUpdateConfigurationSetEventDestinationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateConfigurationSetEventDestinationRequest(input, context),\n        Action: \"UpdateConfigurationSetEventDestination\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryUpdateConfigurationSetReputationMetricsEnabledCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateConfigurationSetReputationMetricsEnabledRequest(input, context),\n        Action: \"UpdateConfigurationSetReputationMetricsEnabled\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryUpdateConfigurationSetSendingEnabledCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateConfigurationSetSendingEnabledRequest(input, context),\n        Action: \"UpdateConfigurationSetSendingEnabled\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryUpdateConfigurationSetTrackingOptionsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateConfigurationSetTrackingOptionsRequest(input, context),\n        Action: \"UpdateConfigurationSetTrackingOptions\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryUpdateCustomVerificationEmailTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateCustomVerificationEmailTemplateRequest(input, context),\n        Action: \"UpdateCustomVerificationEmailTemplate\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryUpdateReceiptRuleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateReceiptRuleRequest(input, context),\n        Action: \"UpdateReceiptRule\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryUpdateTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateTemplateRequest(input, context),\n        Action: \"UpdateTemplate\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryVerifyDomainDkimCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryVerifyDomainDkimRequest(input, context),\n        Action: \"VerifyDomainDkim\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryVerifyDomainIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryVerifyDomainIdentityRequest(input, context),\n        Action: \"VerifyDomainIdentity\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryVerifyEmailAddressCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryVerifyEmailAddressRequest(input, context),\n        Action: \"VerifyEmailAddress\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryVerifyEmailIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryVerifyEmailIdentityRequest(input, context),\n        Action: \"VerifyEmailIdentity\",\n        Version: \"2010-12-01\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const deserializeAws_queryCloneReceiptRuleSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCloneReceiptRuleSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCloneReceiptRuleSetResponse(data.CloneReceiptRuleSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryCloneReceiptRuleSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AlreadyExists\":\n        case \"com.amazonaws.ses#AlreadyExistsException\":\n            throw await deserializeAws_queryAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.ses#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        case \"RuleSetDoesNotExist\":\n        case \"com.amazonaws.ses#RuleSetDoesNotExistException\":\n            throw await deserializeAws_queryRuleSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryCreateConfigurationSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateConfigurationSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateConfigurationSetResponse(data.CreateConfigurationSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryCreateConfigurationSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetAlreadyExists\":\n        case \"com.amazonaws.ses#ConfigurationSetAlreadyExistsException\":\n            throw await deserializeAws_queryConfigurationSetAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"InvalidConfigurationSet\":\n        case \"com.amazonaws.ses#InvalidConfigurationSetException\":\n            throw await deserializeAws_queryInvalidConfigurationSetExceptionResponse(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.ses#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryCreateConfigurationSetEventDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateConfigurationSetEventDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateConfigurationSetEventDestinationResponse(data.CreateConfigurationSetEventDestinationResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryCreateConfigurationSetEventDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"EventDestinationAlreadyExists\":\n        case \"com.amazonaws.ses#EventDestinationAlreadyExistsException\":\n            throw await deserializeAws_queryEventDestinationAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"InvalidCloudWatchDestination\":\n        case \"com.amazonaws.ses#InvalidCloudWatchDestinationException\":\n            throw await deserializeAws_queryInvalidCloudWatchDestinationExceptionResponse(parsedOutput, context);\n        case \"InvalidFirehoseDestination\":\n        case \"com.amazonaws.ses#InvalidFirehoseDestinationException\":\n            throw await deserializeAws_queryInvalidFirehoseDestinationExceptionResponse(parsedOutput, context);\n        case \"InvalidSNSDestination\":\n        case \"com.amazonaws.ses#InvalidSNSDestinationException\":\n            throw await deserializeAws_queryInvalidSNSDestinationExceptionResponse(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.ses#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryCreateConfigurationSetTrackingOptionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateConfigurationSetTrackingOptionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateConfigurationSetTrackingOptionsResponse(data.CreateConfigurationSetTrackingOptionsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryCreateConfigurationSetTrackingOptionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"InvalidTrackingOptions\":\n        case \"com.amazonaws.ses#InvalidTrackingOptionsException\":\n            throw await deserializeAws_queryInvalidTrackingOptionsExceptionResponse(parsedOutput, context);\n        case \"TrackingOptionsAlreadyExistsException\":\n        case \"com.amazonaws.ses#TrackingOptionsAlreadyExistsException\":\n            throw await deserializeAws_queryTrackingOptionsAlreadyExistsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryCreateCustomVerificationEmailTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateCustomVerificationEmailTemplateCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryCreateCustomVerificationEmailTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CustomVerificationEmailInvalidContent\":\n        case \"com.amazonaws.ses#CustomVerificationEmailInvalidContentException\":\n            throw await deserializeAws_queryCustomVerificationEmailInvalidContentExceptionResponse(parsedOutput, context);\n        case \"CustomVerificationEmailTemplateAlreadyExists\":\n        case \"com.amazonaws.ses#CustomVerificationEmailTemplateAlreadyExistsException\":\n            throw await deserializeAws_queryCustomVerificationEmailTemplateAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"FromEmailAddressNotVerified\":\n        case \"com.amazonaws.ses#FromEmailAddressNotVerifiedException\":\n            throw await deserializeAws_queryFromEmailAddressNotVerifiedExceptionResponse(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.ses#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryCreateReceiptFilterCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateReceiptFilterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateReceiptFilterResponse(data.CreateReceiptFilterResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryCreateReceiptFilterCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AlreadyExists\":\n        case \"com.amazonaws.ses#AlreadyExistsException\":\n            throw await deserializeAws_queryAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.ses#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryCreateReceiptRuleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateReceiptRuleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateReceiptRuleResponse(data.CreateReceiptRuleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryCreateReceiptRuleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AlreadyExists\":\n        case \"com.amazonaws.ses#AlreadyExistsException\":\n            throw await deserializeAws_queryAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"InvalidLambdaFunction\":\n        case \"com.amazonaws.ses#InvalidLambdaFunctionException\":\n            throw await deserializeAws_queryInvalidLambdaFunctionExceptionResponse(parsedOutput, context);\n        case \"InvalidS3Configuration\":\n        case \"com.amazonaws.ses#InvalidS3ConfigurationException\":\n            throw await deserializeAws_queryInvalidS3ConfigurationExceptionResponse(parsedOutput, context);\n        case \"InvalidSnsTopic\":\n        case \"com.amazonaws.ses#InvalidSnsTopicException\":\n            throw await deserializeAws_queryInvalidSnsTopicExceptionResponse(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.ses#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        case \"RuleDoesNotExist\":\n        case \"com.amazonaws.ses#RuleDoesNotExistException\":\n            throw await deserializeAws_queryRuleDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"RuleSetDoesNotExist\":\n        case \"com.amazonaws.ses#RuleSetDoesNotExistException\":\n            throw await deserializeAws_queryRuleSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryCreateReceiptRuleSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateReceiptRuleSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateReceiptRuleSetResponse(data.CreateReceiptRuleSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryCreateReceiptRuleSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AlreadyExists\":\n        case \"com.amazonaws.ses#AlreadyExistsException\":\n            throw await deserializeAws_queryAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.ses#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryCreateTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateTemplateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateTemplateResponse(data.CreateTemplateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryCreateTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AlreadyExists\":\n        case \"com.amazonaws.ses#AlreadyExistsException\":\n            throw await deserializeAws_queryAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"InvalidTemplate\":\n        case \"com.amazonaws.ses#InvalidTemplateException\":\n            throw await deserializeAws_queryInvalidTemplateExceptionResponse(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.ses#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryDeleteConfigurationSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteConfigurationSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteConfigurationSetResponse(data.DeleteConfigurationSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteConfigurationSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryDeleteConfigurationSetEventDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteConfigurationSetEventDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteConfigurationSetEventDestinationResponse(data.DeleteConfigurationSetEventDestinationResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteConfigurationSetEventDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"EventDestinationDoesNotExist\":\n        case \"com.amazonaws.ses#EventDestinationDoesNotExistException\":\n            throw await deserializeAws_queryEventDestinationDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryDeleteConfigurationSetTrackingOptionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteConfigurationSetTrackingOptionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteConfigurationSetTrackingOptionsResponse(data.DeleteConfigurationSetTrackingOptionsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteConfigurationSetTrackingOptionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"TrackingOptionsDoesNotExistException\":\n        case \"com.amazonaws.ses#TrackingOptionsDoesNotExistException\":\n            throw await deserializeAws_queryTrackingOptionsDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryDeleteCustomVerificationEmailTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteCustomVerificationEmailTemplateCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteCustomVerificationEmailTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryDeleteIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteIdentityResponse(data.DeleteIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryDeleteIdentityPolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteIdentityPolicyCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteIdentityPolicyResponse(data.DeleteIdentityPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteIdentityPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryDeleteReceiptFilterCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteReceiptFilterCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteReceiptFilterResponse(data.DeleteReceiptFilterResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteReceiptFilterCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryDeleteReceiptRuleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteReceiptRuleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteReceiptRuleResponse(data.DeleteReceiptRuleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteReceiptRuleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RuleSetDoesNotExist\":\n        case \"com.amazonaws.ses#RuleSetDoesNotExistException\":\n            throw await deserializeAws_queryRuleSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryDeleteReceiptRuleSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteReceiptRuleSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteReceiptRuleSetResponse(data.DeleteReceiptRuleSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteReceiptRuleSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CannotDelete\":\n        case \"com.amazonaws.ses#CannotDeleteException\":\n            throw await deserializeAws_queryCannotDeleteExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryDeleteTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteTemplateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteTemplateResponse(data.DeleteTemplateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryDeleteVerifiedEmailAddressCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteVerifiedEmailAddressCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDeleteVerifiedEmailAddressCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryDescribeActiveReceiptRuleSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeActiveReceiptRuleSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeActiveReceiptRuleSetResponse(data.DescribeActiveReceiptRuleSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDescribeActiveReceiptRuleSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryDescribeConfigurationSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeConfigurationSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeConfigurationSetResponse(data.DescribeConfigurationSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDescribeConfigurationSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryDescribeReceiptRuleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeReceiptRuleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeReceiptRuleResponse(data.DescribeReceiptRuleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDescribeReceiptRuleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RuleDoesNotExist\":\n        case \"com.amazonaws.ses#RuleDoesNotExistException\":\n            throw await deserializeAws_queryRuleDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"RuleSetDoesNotExist\":\n        case \"com.amazonaws.ses#RuleSetDoesNotExistException\":\n            throw await deserializeAws_queryRuleSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryDescribeReceiptRuleSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeReceiptRuleSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeReceiptRuleSetResponse(data.DescribeReceiptRuleSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDescribeReceiptRuleSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RuleSetDoesNotExist\":\n        case \"com.amazonaws.ses#RuleSetDoesNotExistException\":\n            throw await deserializeAws_queryRuleSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryGetAccountSendingEnabledCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetAccountSendingEnabledCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetAccountSendingEnabledResponse(data.GetAccountSendingEnabledResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetAccountSendingEnabledCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetCustomVerificationEmailTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetCustomVerificationEmailTemplateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetCustomVerificationEmailTemplateResponse(data.GetCustomVerificationEmailTemplateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetCustomVerificationEmailTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CustomVerificationEmailTemplateDoesNotExist\":\n        case \"com.amazonaws.ses#CustomVerificationEmailTemplateDoesNotExistException\":\n            throw await deserializeAws_queryCustomVerificationEmailTemplateDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryGetIdentityDkimAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetIdentityDkimAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetIdentityDkimAttributesResponse(data.GetIdentityDkimAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetIdentityDkimAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetIdentityMailFromDomainAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetIdentityMailFromDomainAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetIdentityMailFromDomainAttributesResponse(data.GetIdentityMailFromDomainAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetIdentityMailFromDomainAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetIdentityNotificationAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetIdentityNotificationAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetIdentityNotificationAttributesResponse(data.GetIdentityNotificationAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetIdentityNotificationAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetIdentityPoliciesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetIdentityPoliciesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetIdentityPoliciesResponse(data.GetIdentityPoliciesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetIdentityPoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetIdentityVerificationAttributesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetIdentityVerificationAttributesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetIdentityVerificationAttributesResponse(data.GetIdentityVerificationAttributesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetIdentityVerificationAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetSendQuotaCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSendQuotaCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSendQuotaResponse(data.GetSendQuotaResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetSendQuotaCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetSendStatisticsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSendStatisticsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSendStatisticsResponse(data.GetSendStatisticsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetSendStatisticsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetTemplateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetTemplateResponse(data.GetTemplateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"TemplateDoesNotExist\":\n        case \"com.amazonaws.ses#TemplateDoesNotExistException\":\n            throw await deserializeAws_queryTemplateDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryListConfigurationSetsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListConfigurationSetsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListConfigurationSetsResponse(data.ListConfigurationSetsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryListConfigurationSetsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryListCustomVerificationEmailTemplatesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListCustomVerificationEmailTemplatesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListCustomVerificationEmailTemplatesResponse(data.ListCustomVerificationEmailTemplatesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryListCustomVerificationEmailTemplatesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryListIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListIdentitiesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListIdentitiesResponse(data.ListIdentitiesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryListIdentitiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryListIdentityPoliciesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListIdentityPoliciesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListIdentityPoliciesResponse(data.ListIdentityPoliciesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryListIdentityPoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryListReceiptFiltersCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListReceiptFiltersCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListReceiptFiltersResponse(data.ListReceiptFiltersResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryListReceiptFiltersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryListReceiptRuleSetsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListReceiptRuleSetsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListReceiptRuleSetsResponse(data.ListReceiptRuleSetsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryListReceiptRuleSetsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryListTemplatesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListTemplatesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListTemplatesResponse(data.ListTemplatesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryListTemplatesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryListVerifiedEmailAddressesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListVerifiedEmailAddressesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListVerifiedEmailAddressesResponse(data.ListVerifiedEmailAddressesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryListVerifiedEmailAddressesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryPutConfigurationSetDeliveryOptionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryPutConfigurationSetDeliveryOptionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryPutConfigurationSetDeliveryOptionsResponse(data.PutConfigurationSetDeliveryOptionsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryPutConfigurationSetDeliveryOptionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"InvalidDeliveryOptions\":\n        case \"com.amazonaws.ses#InvalidDeliveryOptionsException\":\n            throw await deserializeAws_queryInvalidDeliveryOptionsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryPutIdentityPolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryPutIdentityPolicyCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryPutIdentityPolicyResponse(data.PutIdentityPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryPutIdentityPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidPolicy\":\n        case \"com.amazonaws.ses#InvalidPolicyException\":\n            throw await deserializeAws_queryInvalidPolicyExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryReorderReceiptRuleSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryReorderReceiptRuleSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryReorderReceiptRuleSetResponse(data.ReorderReceiptRuleSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryReorderReceiptRuleSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RuleDoesNotExist\":\n        case \"com.amazonaws.ses#RuleDoesNotExistException\":\n            throw await deserializeAws_queryRuleDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"RuleSetDoesNotExist\":\n        case \"com.amazonaws.ses#RuleSetDoesNotExistException\":\n            throw await deserializeAws_queryRuleSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_querySendBounceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySendBounceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySendBounceResponse(data.SendBounceResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySendBounceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MessageRejected\":\n        case \"com.amazonaws.ses#MessageRejected\":\n            throw await deserializeAws_queryMessageRejectedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_querySendBulkTemplatedEmailCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySendBulkTemplatedEmailCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySendBulkTemplatedEmailResponse(data.SendBulkTemplatedEmailResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySendBulkTemplatedEmailCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccountSendingPausedException\":\n        case \"com.amazonaws.ses#AccountSendingPausedException\":\n            throw await deserializeAws_queryAccountSendingPausedExceptionResponse(parsedOutput, context);\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"ConfigurationSetSendingPausedException\":\n        case \"com.amazonaws.ses#ConfigurationSetSendingPausedException\":\n            throw await deserializeAws_queryConfigurationSetSendingPausedExceptionResponse(parsedOutput, context);\n        case \"MailFromDomainNotVerifiedException\":\n        case \"com.amazonaws.ses#MailFromDomainNotVerifiedException\":\n            throw await deserializeAws_queryMailFromDomainNotVerifiedExceptionResponse(parsedOutput, context);\n        case \"MessageRejected\":\n        case \"com.amazonaws.ses#MessageRejected\":\n            throw await deserializeAws_queryMessageRejectedResponse(parsedOutput, context);\n        case \"TemplateDoesNotExist\":\n        case \"com.amazonaws.ses#TemplateDoesNotExistException\":\n            throw await deserializeAws_queryTemplateDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_querySendCustomVerificationEmailCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySendCustomVerificationEmailCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySendCustomVerificationEmailResponse(data.SendCustomVerificationEmailResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySendCustomVerificationEmailCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"CustomVerificationEmailTemplateDoesNotExist\":\n        case \"com.amazonaws.ses#CustomVerificationEmailTemplateDoesNotExistException\":\n            throw await deserializeAws_queryCustomVerificationEmailTemplateDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"FromEmailAddressNotVerified\":\n        case \"com.amazonaws.ses#FromEmailAddressNotVerifiedException\":\n            throw await deserializeAws_queryFromEmailAddressNotVerifiedExceptionResponse(parsedOutput, context);\n        case \"MessageRejected\":\n        case \"com.amazonaws.ses#MessageRejected\":\n            throw await deserializeAws_queryMessageRejectedResponse(parsedOutput, context);\n        case \"ProductionAccessNotGranted\":\n        case \"com.amazonaws.ses#ProductionAccessNotGrantedException\":\n            throw await deserializeAws_queryProductionAccessNotGrantedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_querySendEmailCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySendEmailCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySendEmailResponse(data.SendEmailResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySendEmailCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccountSendingPausedException\":\n        case \"com.amazonaws.ses#AccountSendingPausedException\":\n            throw await deserializeAws_queryAccountSendingPausedExceptionResponse(parsedOutput, context);\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"ConfigurationSetSendingPausedException\":\n        case \"com.amazonaws.ses#ConfigurationSetSendingPausedException\":\n            throw await deserializeAws_queryConfigurationSetSendingPausedExceptionResponse(parsedOutput, context);\n        case \"MailFromDomainNotVerifiedException\":\n        case \"com.amazonaws.ses#MailFromDomainNotVerifiedException\":\n            throw await deserializeAws_queryMailFromDomainNotVerifiedExceptionResponse(parsedOutput, context);\n        case \"MessageRejected\":\n        case \"com.amazonaws.ses#MessageRejected\":\n            throw await deserializeAws_queryMessageRejectedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_querySendRawEmailCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySendRawEmailCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySendRawEmailResponse(data.SendRawEmailResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySendRawEmailCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccountSendingPausedException\":\n        case \"com.amazonaws.ses#AccountSendingPausedException\":\n            throw await deserializeAws_queryAccountSendingPausedExceptionResponse(parsedOutput, context);\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"ConfigurationSetSendingPausedException\":\n        case \"com.amazonaws.ses#ConfigurationSetSendingPausedException\":\n            throw await deserializeAws_queryConfigurationSetSendingPausedExceptionResponse(parsedOutput, context);\n        case \"MailFromDomainNotVerifiedException\":\n        case \"com.amazonaws.ses#MailFromDomainNotVerifiedException\":\n            throw await deserializeAws_queryMailFromDomainNotVerifiedExceptionResponse(parsedOutput, context);\n        case \"MessageRejected\":\n        case \"com.amazonaws.ses#MessageRejected\":\n            throw await deserializeAws_queryMessageRejectedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_querySendTemplatedEmailCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySendTemplatedEmailCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySendTemplatedEmailResponse(data.SendTemplatedEmailResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySendTemplatedEmailCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccountSendingPausedException\":\n        case \"com.amazonaws.ses#AccountSendingPausedException\":\n            throw await deserializeAws_queryAccountSendingPausedExceptionResponse(parsedOutput, context);\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"ConfigurationSetSendingPausedException\":\n        case \"com.amazonaws.ses#ConfigurationSetSendingPausedException\":\n            throw await deserializeAws_queryConfigurationSetSendingPausedExceptionResponse(parsedOutput, context);\n        case \"MailFromDomainNotVerifiedException\":\n        case \"com.amazonaws.ses#MailFromDomainNotVerifiedException\":\n            throw await deserializeAws_queryMailFromDomainNotVerifiedExceptionResponse(parsedOutput, context);\n        case \"MessageRejected\":\n        case \"com.amazonaws.ses#MessageRejected\":\n            throw await deserializeAws_queryMessageRejectedResponse(parsedOutput, context);\n        case \"TemplateDoesNotExist\":\n        case \"com.amazonaws.ses#TemplateDoesNotExistException\":\n            throw await deserializeAws_queryTemplateDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_querySetActiveReceiptRuleSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetActiveReceiptRuleSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetActiveReceiptRuleSetResponse(data.SetActiveReceiptRuleSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySetActiveReceiptRuleSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RuleSetDoesNotExist\":\n        case \"com.amazonaws.ses#RuleSetDoesNotExistException\":\n            throw await deserializeAws_queryRuleSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_querySetIdentityDkimEnabledCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetIdentityDkimEnabledCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetIdentityDkimEnabledResponse(data.SetIdentityDkimEnabledResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySetIdentityDkimEnabledCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_querySetIdentityFeedbackForwardingEnabledCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetIdentityFeedbackForwardingEnabledCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetIdentityFeedbackForwardingEnabledResponse(data.SetIdentityFeedbackForwardingEnabledResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySetIdentityFeedbackForwardingEnabledCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_querySetIdentityHeadersInNotificationsEnabledCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetIdentityHeadersInNotificationsEnabledCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetIdentityHeadersInNotificationsEnabledResponse(data.SetIdentityHeadersInNotificationsEnabledResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySetIdentityHeadersInNotificationsEnabledCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_querySetIdentityMailFromDomainCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetIdentityMailFromDomainCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetIdentityMailFromDomainResponse(data.SetIdentityMailFromDomainResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySetIdentityMailFromDomainCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_querySetIdentityNotificationTopicCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetIdentityNotificationTopicCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetIdentityNotificationTopicResponse(data.SetIdentityNotificationTopicResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySetIdentityNotificationTopicCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_querySetReceiptRulePositionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetReceiptRulePositionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetReceiptRulePositionResponse(data.SetReceiptRulePositionResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_querySetReceiptRulePositionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RuleDoesNotExist\":\n        case \"com.amazonaws.ses#RuleDoesNotExistException\":\n            throw await deserializeAws_queryRuleDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"RuleSetDoesNotExist\":\n        case \"com.amazonaws.ses#RuleSetDoesNotExistException\":\n            throw await deserializeAws_queryRuleSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryTestRenderTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryTestRenderTemplateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryTestRenderTemplateResponse(data.TestRenderTemplateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryTestRenderTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRenderingParameter\":\n        case \"com.amazonaws.ses#InvalidRenderingParameterException\":\n            throw await deserializeAws_queryInvalidRenderingParameterExceptionResponse(parsedOutput, context);\n        case \"MissingRenderingAttribute\":\n        case \"com.amazonaws.ses#MissingRenderingAttributeException\":\n            throw await deserializeAws_queryMissingRenderingAttributeExceptionResponse(parsedOutput, context);\n        case \"TemplateDoesNotExist\":\n        case \"com.amazonaws.ses#TemplateDoesNotExistException\":\n            throw await deserializeAws_queryTemplateDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryUpdateAccountSendingEnabledCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateAccountSendingEnabledCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryUpdateAccountSendingEnabledCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryUpdateConfigurationSetEventDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateConfigurationSetEventDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryUpdateConfigurationSetEventDestinationResponse(data.UpdateConfigurationSetEventDestinationResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryUpdateConfigurationSetEventDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"EventDestinationDoesNotExist\":\n        case \"com.amazonaws.ses#EventDestinationDoesNotExistException\":\n            throw await deserializeAws_queryEventDestinationDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"InvalidCloudWatchDestination\":\n        case \"com.amazonaws.ses#InvalidCloudWatchDestinationException\":\n            throw await deserializeAws_queryInvalidCloudWatchDestinationExceptionResponse(parsedOutput, context);\n        case \"InvalidFirehoseDestination\":\n        case \"com.amazonaws.ses#InvalidFirehoseDestinationException\":\n            throw await deserializeAws_queryInvalidFirehoseDestinationExceptionResponse(parsedOutput, context);\n        case \"InvalidSNSDestination\":\n        case \"com.amazonaws.ses#InvalidSNSDestinationException\":\n            throw await deserializeAws_queryInvalidSNSDestinationExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryUpdateConfigurationSetReputationMetricsEnabledCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateConfigurationSetReputationMetricsEnabledCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryUpdateConfigurationSetReputationMetricsEnabledCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryUpdateConfigurationSetSendingEnabledCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateConfigurationSetSendingEnabledCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryUpdateConfigurationSetSendingEnabledCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryUpdateConfigurationSetTrackingOptionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateConfigurationSetTrackingOptionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryUpdateConfigurationSetTrackingOptionsResponse(data.UpdateConfigurationSetTrackingOptionsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryUpdateConfigurationSetTrackingOptionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConfigurationSetDoesNotExist\":\n        case \"com.amazonaws.ses#ConfigurationSetDoesNotExistException\":\n            throw await deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"InvalidTrackingOptions\":\n        case \"com.amazonaws.ses#InvalidTrackingOptionsException\":\n            throw await deserializeAws_queryInvalidTrackingOptionsExceptionResponse(parsedOutput, context);\n        case \"TrackingOptionsDoesNotExistException\":\n        case \"com.amazonaws.ses#TrackingOptionsDoesNotExistException\":\n            throw await deserializeAws_queryTrackingOptionsDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryUpdateCustomVerificationEmailTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateCustomVerificationEmailTemplateCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryUpdateCustomVerificationEmailTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CustomVerificationEmailInvalidContent\":\n        case \"com.amazonaws.ses#CustomVerificationEmailInvalidContentException\":\n            throw await deserializeAws_queryCustomVerificationEmailInvalidContentExceptionResponse(parsedOutput, context);\n        case \"CustomVerificationEmailTemplateDoesNotExist\":\n        case \"com.amazonaws.ses#CustomVerificationEmailTemplateDoesNotExistException\":\n            throw await deserializeAws_queryCustomVerificationEmailTemplateDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"FromEmailAddressNotVerified\":\n        case \"com.amazonaws.ses#FromEmailAddressNotVerifiedException\":\n            throw await deserializeAws_queryFromEmailAddressNotVerifiedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryUpdateReceiptRuleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateReceiptRuleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryUpdateReceiptRuleResponse(data.UpdateReceiptRuleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryUpdateReceiptRuleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidLambdaFunction\":\n        case \"com.amazonaws.ses#InvalidLambdaFunctionException\":\n            throw await deserializeAws_queryInvalidLambdaFunctionExceptionResponse(parsedOutput, context);\n        case \"InvalidS3Configuration\":\n        case \"com.amazonaws.ses#InvalidS3ConfigurationException\":\n            throw await deserializeAws_queryInvalidS3ConfigurationExceptionResponse(parsedOutput, context);\n        case \"InvalidSnsTopic\":\n        case \"com.amazonaws.ses#InvalidSnsTopicException\":\n            throw await deserializeAws_queryInvalidSnsTopicExceptionResponse(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.ses#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        case \"RuleDoesNotExist\":\n        case \"com.amazonaws.ses#RuleDoesNotExistException\":\n            throw await deserializeAws_queryRuleDoesNotExistExceptionResponse(parsedOutput, context);\n        case \"RuleSetDoesNotExist\":\n        case \"com.amazonaws.ses#RuleSetDoesNotExistException\":\n            throw await deserializeAws_queryRuleSetDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryUpdateTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateTemplateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryUpdateTemplateResponse(data.UpdateTemplateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryUpdateTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidTemplate\":\n        case \"com.amazonaws.ses#InvalidTemplateException\":\n            throw await deserializeAws_queryInvalidTemplateExceptionResponse(parsedOutput, context);\n        case \"TemplateDoesNotExist\":\n        case \"com.amazonaws.ses#TemplateDoesNotExistException\":\n            throw await deserializeAws_queryTemplateDoesNotExistExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryVerifyDomainDkimCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryVerifyDomainDkimCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryVerifyDomainDkimResponse(data.VerifyDomainDkimResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryVerifyDomainDkimCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryVerifyDomainIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryVerifyDomainIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryVerifyDomainIdentityResponse(data.VerifyDomainIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryVerifyDomainIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryVerifyEmailAddressCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryVerifyEmailAddressCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryVerifyEmailAddressCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryVerifyEmailIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryVerifyEmailIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryVerifyEmailIdentityResponse(data.VerifyEmailIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryVerifyEmailIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nconst deserializeAws_queryAccountSendingPausedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryAccountSendingPausedException(body.Error, context);\n    const exception = new AccountSendingPausedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryAlreadyExistsException(body.Error, context);\n    const exception = new AlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryCannotDeleteExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryCannotDeleteException(body.Error, context);\n    const exception = new CannotDeleteException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryConfigurationSetAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryConfigurationSetAlreadyExistsException(body.Error, context);\n    const exception = new ConfigurationSetAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryConfigurationSetDoesNotExistException(body.Error, context);\n    const exception = new ConfigurationSetDoesNotExistException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryConfigurationSetSendingPausedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryConfigurationSetSendingPausedException(body.Error, context);\n    const exception = new ConfigurationSetSendingPausedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryCustomVerificationEmailInvalidContentExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryCustomVerificationEmailInvalidContentException(body.Error, context);\n    const exception = new CustomVerificationEmailInvalidContentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryCustomVerificationEmailTemplateAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryCustomVerificationEmailTemplateAlreadyExistsException(body.Error, context);\n    const exception = new CustomVerificationEmailTemplateAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryCustomVerificationEmailTemplateDoesNotExistExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryCustomVerificationEmailTemplateDoesNotExistException(body.Error, context);\n    const exception = new CustomVerificationEmailTemplateDoesNotExistException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryEventDestinationAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryEventDestinationAlreadyExistsException(body.Error, context);\n    const exception = new EventDestinationAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryEventDestinationDoesNotExistExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryEventDestinationDoesNotExistException(body.Error, context);\n    const exception = new EventDestinationDoesNotExistException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryFromEmailAddressNotVerifiedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryFromEmailAddressNotVerifiedException(body.Error, context);\n    const exception = new FromEmailAddressNotVerifiedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidCloudWatchDestinationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidCloudWatchDestinationException(body.Error, context);\n    const exception = new InvalidCloudWatchDestinationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidConfigurationSetExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidConfigurationSetException(body.Error, context);\n    const exception = new InvalidConfigurationSetException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidDeliveryOptionsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidDeliveryOptionsException(body.Error, context);\n    const exception = new InvalidDeliveryOptionsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidFirehoseDestinationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidFirehoseDestinationException(body.Error, context);\n    const exception = new InvalidFirehoseDestinationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidLambdaFunctionExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidLambdaFunctionException(body.Error, context);\n    const exception = new InvalidLambdaFunctionException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidPolicyExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidPolicyException(body.Error, context);\n    const exception = new InvalidPolicyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidRenderingParameterExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidRenderingParameterException(body.Error, context);\n    const exception = new InvalidRenderingParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidS3ConfigurationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidS3ConfigurationException(body.Error, context);\n    const exception = new InvalidS3ConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidSNSDestinationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidSNSDestinationException(body.Error, context);\n    const exception = new InvalidSNSDestinationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidSnsTopicExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidSnsTopicException(body.Error, context);\n    const exception = new InvalidSnsTopicException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidTemplateExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidTemplateException(body.Error, context);\n    const exception = new InvalidTemplateException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidTrackingOptionsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidTrackingOptionsException(body.Error, context);\n    const exception = new InvalidTrackingOptionsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryLimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryLimitExceededException(body.Error, context);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryMailFromDomainNotVerifiedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryMailFromDomainNotVerifiedException(body.Error, context);\n    const exception = new MailFromDomainNotVerifiedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryMessageRejectedResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryMessageRejected(body.Error, context);\n    const exception = new MessageRejected({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryMissingRenderingAttributeExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryMissingRenderingAttributeException(body.Error, context);\n    const exception = new MissingRenderingAttributeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryProductionAccessNotGrantedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryProductionAccessNotGrantedException(body.Error, context);\n    const exception = new ProductionAccessNotGrantedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryRuleDoesNotExistExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryRuleDoesNotExistException(body.Error, context);\n    const exception = new RuleDoesNotExistException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryRuleSetDoesNotExistExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryRuleSetDoesNotExistException(body.Error, context);\n    const exception = new RuleSetDoesNotExistException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryTemplateDoesNotExistExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTemplateDoesNotExistException(body.Error, context);\n    const exception = new TemplateDoesNotExistException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryTrackingOptionsAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTrackingOptionsAlreadyExistsException(body.Error, context);\n    const exception = new TrackingOptionsAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryTrackingOptionsDoesNotExistExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTrackingOptionsDoesNotExistException(body.Error, context);\n    const exception = new TrackingOptionsDoesNotExistException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst serializeAws_queryAddHeaderAction = (input, context) => {\n    const entries = {};\n    if (input.HeaderName != null) {\n        entries[\"HeaderName\"] = input.HeaderName;\n    }\n    if (input.HeaderValue != null) {\n        entries[\"HeaderValue\"] = input.HeaderValue;\n    }\n    return entries;\n};\nconst serializeAws_queryAddressList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryBody = (input, context) => {\n    const entries = {};\n    if (input.Text != null) {\n        const memberEntries = serializeAws_queryContent(input.Text, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Text.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Html != null) {\n        const memberEntries = serializeAws_queryContent(input.Html, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Html.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryBounceAction = (input, context) => {\n    const entries = {};\n    if (input.TopicArn != null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.SmtpReplyCode != null) {\n        entries[\"SmtpReplyCode\"] = input.SmtpReplyCode;\n    }\n    if (input.StatusCode != null) {\n        entries[\"StatusCode\"] = input.StatusCode;\n    }\n    if (input.Message != null) {\n        entries[\"Message\"] = input.Message;\n    }\n    if (input.Sender != null) {\n        entries[\"Sender\"] = input.Sender;\n    }\n    return entries;\n};\nconst serializeAws_queryBouncedRecipientInfo = (input, context) => {\n    const entries = {};\n    if (input.Recipient != null) {\n        entries[\"Recipient\"] = input.Recipient;\n    }\n    if (input.RecipientArn != null) {\n        entries[\"RecipientArn\"] = input.RecipientArn;\n    }\n    if (input.BounceType != null) {\n        entries[\"BounceType\"] = input.BounceType;\n    }\n    if (input.RecipientDsnFields != null) {\n        const memberEntries = serializeAws_queryRecipientDsnFields(input.RecipientDsnFields, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RecipientDsnFields.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryBouncedRecipientInfoList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryBouncedRecipientInfo(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryBulkEmailDestination = (input, context) => {\n    const entries = {};\n    if (input.Destination != null) {\n        const memberEntries = serializeAws_queryDestination(input.Destination, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Destination.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ReplacementTags != null) {\n        const memberEntries = serializeAws_queryMessageTagList(input.ReplacementTags, context);\n        if (input.ReplacementTags?.length === 0) {\n            entries.ReplacementTags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ReplacementTags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ReplacementTemplateData != null) {\n        entries[\"ReplacementTemplateData\"] = input.ReplacementTemplateData;\n    }\n    return entries;\n};\nconst serializeAws_queryBulkEmailDestinationList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryBulkEmailDestination(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryCloneReceiptRuleSetRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    if (input.OriginalRuleSetName != null) {\n        entries[\"OriginalRuleSetName\"] = input.OriginalRuleSetName;\n    }\n    return entries;\n};\nconst serializeAws_queryCloudWatchDestination = (input, context) => {\n    const entries = {};\n    if (input.DimensionConfigurations != null) {\n        const memberEntries = serializeAws_queryCloudWatchDimensionConfigurations(input.DimensionConfigurations, context);\n        if (input.DimensionConfigurations?.length === 0) {\n            entries.DimensionConfigurations = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `DimensionConfigurations.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCloudWatchDimensionConfiguration = (input, context) => {\n    const entries = {};\n    if (input.DimensionName != null) {\n        entries[\"DimensionName\"] = input.DimensionName;\n    }\n    if (input.DimensionValueSource != null) {\n        entries[\"DimensionValueSource\"] = input.DimensionValueSource;\n    }\n    if (input.DefaultDimensionValue != null) {\n        entries[\"DefaultDimensionValue\"] = input.DefaultDimensionValue;\n    }\n    return entries;\n};\nconst serializeAws_queryCloudWatchDimensionConfigurations = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryCloudWatchDimensionConfiguration(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryConfigurationSet = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    return entries;\n};\nconst serializeAws_queryConfigurationSetAttributeList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryContent = (input, context) => {\n    const entries = {};\n    if (input.Data != null) {\n        entries[\"Data\"] = input.Data;\n    }\n    if (input.Charset != null) {\n        entries[\"Charset\"] = input.Charset;\n    }\n    return entries;\n};\nconst serializeAws_queryCreateConfigurationSetEventDestinationRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.EventDestination != null) {\n        const memberEntries = serializeAws_queryEventDestination(input.EventDestination, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `EventDestination.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCreateConfigurationSetRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSet != null) {\n        const memberEntries = serializeAws_queryConfigurationSet(input.ConfigurationSet, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ConfigurationSet.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCreateConfigurationSetTrackingOptionsRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.TrackingOptions != null) {\n        const memberEntries = serializeAws_queryTrackingOptions(input.TrackingOptions, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TrackingOptions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCreateCustomVerificationEmailTemplateRequest = (input, context) => {\n    const entries = {};\n    if (input.TemplateName != null) {\n        entries[\"TemplateName\"] = input.TemplateName;\n    }\n    if (input.FromEmailAddress != null) {\n        entries[\"FromEmailAddress\"] = input.FromEmailAddress;\n    }\n    if (input.TemplateSubject != null) {\n        entries[\"TemplateSubject\"] = input.TemplateSubject;\n    }\n    if (input.TemplateContent != null) {\n        entries[\"TemplateContent\"] = input.TemplateContent;\n    }\n    if (input.SuccessRedirectionURL != null) {\n        entries[\"SuccessRedirectionURL\"] = input.SuccessRedirectionURL;\n    }\n    if (input.FailureRedirectionURL != null) {\n        entries[\"FailureRedirectionURL\"] = input.FailureRedirectionURL;\n    }\n    return entries;\n};\nconst serializeAws_queryCreateReceiptFilterRequest = (input, context) => {\n    const entries = {};\n    if (input.Filter != null) {\n        const memberEntries = serializeAws_queryReceiptFilter(input.Filter, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Filter.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCreateReceiptRuleRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    if (input.After != null) {\n        entries[\"After\"] = input.After;\n    }\n    if (input.Rule != null) {\n        const memberEntries = serializeAws_queryReceiptRule(input.Rule, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Rule.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCreateReceiptRuleSetRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    return entries;\n};\nconst serializeAws_queryCreateTemplateRequest = (input, context) => {\n    const entries = {};\n    if (input.Template != null) {\n        const memberEntries = serializeAws_queryTemplate(input.Template, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Template.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteConfigurationSetEventDestinationRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.EventDestinationName != null) {\n        entries[\"EventDestinationName\"] = input.EventDestinationName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteConfigurationSetRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteConfigurationSetTrackingOptionsRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteCustomVerificationEmailTemplateRequest = (input, context) => {\n    const entries = {};\n    if (input.TemplateName != null) {\n        entries[\"TemplateName\"] = input.TemplateName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteIdentityPolicyRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    if (input.PolicyName != null) {\n        entries[\"PolicyName\"] = input.PolicyName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteReceiptFilterRequest = (input, context) => {\n    const entries = {};\n    if (input.FilterName != null) {\n        entries[\"FilterName\"] = input.FilterName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteReceiptRuleRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    if (input.RuleName != null) {\n        entries[\"RuleName\"] = input.RuleName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteReceiptRuleSetRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteTemplateRequest = (input, context) => {\n    const entries = {};\n    if (input.TemplateName != null) {\n        entries[\"TemplateName\"] = input.TemplateName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteVerifiedEmailAddressRequest = (input, context) => {\n    const entries = {};\n    if (input.EmailAddress != null) {\n        entries[\"EmailAddress\"] = input.EmailAddress;\n    }\n    return entries;\n};\nconst serializeAws_queryDeliveryOptions = (input, context) => {\n    const entries = {};\n    if (input.TlsPolicy != null) {\n        entries[\"TlsPolicy\"] = input.TlsPolicy;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeActiveReceiptRuleSetRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst serializeAws_queryDescribeConfigurationSetRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.ConfigurationSetAttributeNames != null) {\n        const memberEntries = serializeAws_queryConfigurationSetAttributeList(input.ConfigurationSetAttributeNames, context);\n        if (input.ConfigurationSetAttributeNames?.length === 0) {\n            entries.ConfigurationSetAttributeNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ConfigurationSetAttributeNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeReceiptRuleRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    if (input.RuleName != null) {\n        entries[\"RuleName\"] = input.RuleName;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeReceiptRuleSetRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    return entries;\n};\nconst serializeAws_queryDestination = (input, context) => {\n    const entries = {};\n    if (input.ToAddresses != null) {\n        const memberEntries = serializeAws_queryAddressList(input.ToAddresses, context);\n        if (input.ToAddresses?.length === 0) {\n            entries.ToAddresses = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ToAddresses.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.CcAddresses != null) {\n        const memberEntries = serializeAws_queryAddressList(input.CcAddresses, context);\n        if (input.CcAddresses?.length === 0) {\n            entries.CcAddresses = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `CcAddresses.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.BccAddresses != null) {\n        const memberEntries = serializeAws_queryAddressList(input.BccAddresses, context);\n        if (input.BccAddresses?.length === 0) {\n            entries.BccAddresses = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `BccAddresses.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryEventDestination = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Enabled != null) {\n        entries[\"Enabled\"] = input.Enabled;\n    }\n    if (input.MatchingEventTypes != null) {\n        const memberEntries = serializeAws_queryEventTypes(input.MatchingEventTypes, context);\n        if (input.MatchingEventTypes?.length === 0) {\n            entries.MatchingEventTypes = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MatchingEventTypes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.KinesisFirehoseDestination != null) {\n        const memberEntries = serializeAws_queryKinesisFirehoseDestination(input.KinesisFirehoseDestination, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `KinesisFirehoseDestination.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.CloudWatchDestination != null) {\n        const memberEntries = serializeAws_queryCloudWatchDestination(input.CloudWatchDestination, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `CloudWatchDestination.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.SNSDestination != null) {\n        const memberEntries = serializeAws_querySNSDestination(input.SNSDestination, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `SNSDestination.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryEventTypes = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryExtensionField = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Value != null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_queryExtensionFieldList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryExtensionField(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryGetCustomVerificationEmailTemplateRequest = (input, context) => {\n    const entries = {};\n    if (input.TemplateName != null) {\n        entries[\"TemplateName\"] = input.TemplateName;\n    }\n    return entries;\n};\nconst serializeAws_queryGetIdentityDkimAttributesRequest = (input, context) => {\n    const entries = {};\n    if (input.Identities != null) {\n        const memberEntries = serializeAws_queryIdentityList(input.Identities, context);\n        if (input.Identities?.length === 0) {\n            entries.Identities = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Identities.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetIdentityMailFromDomainAttributesRequest = (input, context) => {\n    const entries = {};\n    if (input.Identities != null) {\n        const memberEntries = serializeAws_queryIdentityList(input.Identities, context);\n        if (input.Identities?.length === 0) {\n            entries.Identities = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Identities.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetIdentityNotificationAttributesRequest = (input, context) => {\n    const entries = {};\n    if (input.Identities != null) {\n        const memberEntries = serializeAws_queryIdentityList(input.Identities, context);\n        if (input.Identities?.length === 0) {\n            entries.Identities = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Identities.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetIdentityPoliciesRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    if (input.PolicyNames != null) {\n        const memberEntries = serializeAws_queryPolicyNameList(input.PolicyNames, context);\n        if (input.PolicyNames?.length === 0) {\n            entries.PolicyNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetIdentityVerificationAttributesRequest = (input, context) => {\n    const entries = {};\n    if (input.Identities != null) {\n        const memberEntries = serializeAws_queryIdentityList(input.Identities, context);\n        if (input.Identities?.length === 0) {\n            entries.Identities = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Identities.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetTemplateRequest = (input, context) => {\n    const entries = {};\n    if (input.TemplateName != null) {\n        entries[\"TemplateName\"] = input.TemplateName;\n    }\n    return entries;\n};\nconst serializeAws_queryIdentityList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryKinesisFirehoseDestination = (input, context) => {\n    const entries = {};\n    if (input.IAMRoleARN != null) {\n        entries[\"IAMRoleARN\"] = input.IAMRoleARN;\n    }\n    if (input.DeliveryStreamARN != null) {\n        entries[\"DeliveryStreamARN\"] = input.DeliveryStreamARN;\n    }\n    return entries;\n};\nconst serializeAws_queryLambdaAction = (input, context) => {\n    const entries = {};\n    if (input.TopicArn != null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.FunctionArn != null) {\n        entries[\"FunctionArn\"] = input.FunctionArn;\n    }\n    if (input.InvocationType != null) {\n        entries[\"InvocationType\"] = input.InvocationType;\n    }\n    return entries;\n};\nconst serializeAws_queryListConfigurationSetsRequest = (input, context) => {\n    const entries = {};\n    if (input.NextToken != null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxItems != null) {\n        entries[\"MaxItems\"] = input.MaxItems;\n    }\n    return entries;\n};\nconst serializeAws_queryListCustomVerificationEmailTemplatesRequest = (input, context) => {\n    const entries = {};\n    if (input.NextToken != null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxResults != null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    return entries;\n};\nconst serializeAws_queryListIdentitiesRequest = (input, context) => {\n    const entries = {};\n    if (input.IdentityType != null) {\n        entries[\"IdentityType\"] = input.IdentityType;\n    }\n    if (input.NextToken != null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxItems != null) {\n        entries[\"MaxItems\"] = input.MaxItems;\n    }\n    return entries;\n};\nconst serializeAws_queryListIdentityPoliciesRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    return entries;\n};\nconst serializeAws_queryListReceiptFiltersRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst serializeAws_queryListReceiptRuleSetsRequest = (input, context) => {\n    const entries = {};\n    if (input.NextToken != null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListTemplatesRequest = (input, context) => {\n    const entries = {};\n    if (input.NextToken != null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxItems != null) {\n        entries[\"MaxItems\"] = input.MaxItems;\n    }\n    return entries;\n};\nconst serializeAws_queryMessage = (input, context) => {\n    const entries = {};\n    if (input.Subject != null) {\n        const memberEntries = serializeAws_queryContent(input.Subject, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Subject.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Body != null) {\n        const memberEntries = serializeAws_queryBody(input.Body, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Body.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryMessageDsn = (input, context) => {\n    const entries = {};\n    if (input.ReportingMta != null) {\n        entries[\"ReportingMta\"] = input.ReportingMta;\n    }\n    if (input.ArrivalDate != null) {\n        entries[\"ArrivalDate\"] = input.ArrivalDate.toISOString().split(\".\")[0] + \"Z\";\n    }\n    if (input.ExtensionFields != null) {\n        const memberEntries = serializeAws_queryExtensionFieldList(input.ExtensionFields, context);\n        if (input.ExtensionFields?.length === 0) {\n            entries.ExtensionFields = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ExtensionFields.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryMessageTag = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Value != null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_queryMessageTagList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryMessageTag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPolicyNameList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPutConfigurationSetDeliveryOptionsRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.DeliveryOptions != null) {\n        const memberEntries = serializeAws_queryDeliveryOptions(input.DeliveryOptions, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `DeliveryOptions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryPutIdentityPolicyRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    if (input.PolicyName != null) {\n        entries[\"PolicyName\"] = input.PolicyName;\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    return entries;\n};\nconst serializeAws_queryRawMessage = (input, context) => {\n    const entries = {};\n    if (input.Data != null) {\n        entries[\"Data\"] = context.base64Encoder(input.Data);\n    }\n    return entries;\n};\nconst serializeAws_queryReceiptAction = (input, context) => {\n    const entries = {};\n    if (input.S3Action != null) {\n        const memberEntries = serializeAws_queryS3Action(input.S3Action, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `S3Action.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.BounceAction != null) {\n        const memberEntries = serializeAws_queryBounceAction(input.BounceAction, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `BounceAction.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.WorkmailAction != null) {\n        const memberEntries = serializeAws_queryWorkmailAction(input.WorkmailAction, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `WorkmailAction.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.LambdaAction != null) {\n        const memberEntries = serializeAws_queryLambdaAction(input.LambdaAction, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `LambdaAction.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.StopAction != null) {\n        const memberEntries = serializeAws_queryStopAction(input.StopAction, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `StopAction.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.AddHeaderAction != null) {\n        const memberEntries = serializeAws_queryAddHeaderAction(input.AddHeaderAction, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AddHeaderAction.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.SNSAction != null) {\n        const memberEntries = serializeAws_querySNSAction(input.SNSAction, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `SNSAction.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryReceiptActionsList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryReceiptAction(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryReceiptFilter = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.IpFilter != null) {\n        const memberEntries = serializeAws_queryReceiptIpFilter(input.IpFilter, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `IpFilter.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryReceiptIpFilter = (input, context) => {\n    const entries = {};\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.Cidr != null) {\n        entries[\"Cidr\"] = input.Cidr;\n    }\n    return entries;\n};\nconst serializeAws_queryReceiptRule = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Enabled != null) {\n        entries[\"Enabled\"] = input.Enabled;\n    }\n    if (input.TlsPolicy != null) {\n        entries[\"TlsPolicy\"] = input.TlsPolicy;\n    }\n    if (input.Recipients != null) {\n        const memberEntries = serializeAws_queryRecipientsList(input.Recipients, context);\n        if (input.Recipients?.length === 0) {\n            entries.Recipients = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Recipients.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Actions != null) {\n        const memberEntries = serializeAws_queryReceiptActionsList(input.Actions, context);\n        if (input.Actions?.length === 0) {\n            entries.Actions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Actions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ScanEnabled != null) {\n        entries[\"ScanEnabled\"] = input.ScanEnabled;\n    }\n    return entries;\n};\nconst serializeAws_queryReceiptRuleNamesList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryRecipientDsnFields = (input, context) => {\n    const entries = {};\n    if (input.FinalRecipient != null) {\n        entries[\"FinalRecipient\"] = input.FinalRecipient;\n    }\n    if (input.Action != null) {\n        entries[\"Action\"] = input.Action;\n    }\n    if (input.RemoteMta != null) {\n        entries[\"RemoteMta\"] = input.RemoteMta;\n    }\n    if (input.Status != null) {\n        entries[\"Status\"] = input.Status;\n    }\n    if (input.DiagnosticCode != null) {\n        entries[\"DiagnosticCode\"] = input.DiagnosticCode;\n    }\n    if (input.LastAttemptDate != null) {\n        entries[\"LastAttemptDate\"] = input.LastAttemptDate.toISOString().split(\".\")[0] + \"Z\";\n    }\n    if (input.ExtensionFields != null) {\n        const memberEntries = serializeAws_queryExtensionFieldList(input.ExtensionFields, context);\n        if (input.ExtensionFields?.length === 0) {\n            entries.ExtensionFields = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ExtensionFields.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryRecipientsList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryReorderReceiptRuleSetRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    if (input.RuleNames != null) {\n        const memberEntries = serializeAws_queryReceiptRuleNamesList(input.RuleNames, context);\n        if (input.RuleNames?.length === 0) {\n            entries.RuleNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RuleNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryS3Action = (input, context) => {\n    const entries = {};\n    if (input.TopicArn != null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.BucketName != null) {\n        entries[\"BucketName\"] = input.BucketName;\n    }\n    if (input.ObjectKeyPrefix != null) {\n        entries[\"ObjectKeyPrefix\"] = input.ObjectKeyPrefix;\n    }\n    if (input.KmsKeyArn != null) {\n        entries[\"KmsKeyArn\"] = input.KmsKeyArn;\n    }\n    return entries;\n};\nconst serializeAws_querySendBounceRequest = (input, context) => {\n    const entries = {};\n    if (input.OriginalMessageId != null) {\n        entries[\"OriginalMessageId\"] = input.OriginalMessageId;\n    }\n    if (input.BounceSender != null) {\n        entries[\"BounceSender\"] = input.BounceSender;\n    }\n    if (input.Explanation != null) {\n        entries[\"Explanation\"] = input.Explanation;\n    }\n    if (input.MessageDsn != null) {\n        const memberEntries = serializeAws_queryMessageDsn(input.MessageDsn, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MessageDsn.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.BouncedRecipientInfoList != null) {\n        const memberEntries = serializeAws_queryBouncedRecipientInfoList(input.BouncedRecipientInfoList, context);\n        if (input.BouncedRecipientInfoList?.length === 0) {\n            entries.BouncedRecipientInfoList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `BouncedRecipientInfoList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.BounceSenderArn != null) {\n        entries[\"BounceSenderArn\"] = input.BounceSenderArn;\n    }\n    return entries;\n};\nconst serializeAws_querySendBulkTemplatedEmailRequest = (input, context) => {\n    const entries = {};\n    if (input.Source != null) {\n        entries[\"Source\"] = input.Source;\n    }\n    if (input.SourceArn != null) {\n        entries[\"SourceArn\"] = input.SourceArn;\n    }\n    if (input.ReplyToAddresses != null) {\n        const memberEntries = serializeAws_queryAddressList(input.ReplyToAddresses, context);\n        if (input.ReplyToAddresses?.length === 0) {\n            entries.ReplyToAddresses = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ReplyToAddresses.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ReturnPath != null) {\n        entries[\"ReturnPath\"] = input.ReturnPath;\n    }\n    if (input.ReturnPathArn != null) {\n        entries[\"ReturnPathArn\"] = input.ReturnPathArn;\n    }\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.DefaultTags != null) {\n        const memberEntries = serializeAws_queryMessageTagList(input.DefaultTags, context);\n        if (input.DefaultTags?.length === 0) {\n            entries.DefaultTags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `DefaultTags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Template != null) {\n        entries[\"Template\"] = input.Template;\n    }\n    if (input.TemplateArn != null) {\n        entries[\"TemplateArn\"] = input.TemplateArn;\n    }\n    if (input.DefaultTemplateData != null) {\n        entries[\"DefaultTemplateData\"] = input.DefaultTemplateData;\n    }\n    if (input.Destinations != null) {\n        const memberEntries = serializeAws_queryBulkEmailDestinationList(input.Destinations, context);\n        if (input.Destinations?.length === 0) {\n            entries.Destinations = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Destinations.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_querySendCustomVerificationEmailRequest = (input, context) => {\n    const entries = {};\n    if (input.EmailAddress != null) {\n        entries[\"EmailAddress\"] = input.EmailAddress;\n    }\n    if (input.TemplateName != null) {\n        entries[\"TemplateName\"] = input.TemplateName;\n    }\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    return entries;\n};\nconst serializeAws_querySendEmailRequest = (input, context) => {\n    const entries = {};\n    if (input.Source != null) {\n        entries[\"Source\"] = input.Source;\n    }\n    if (input.Destination != null) {\n        const memberEntries = serializeAws_queryDestination(input.Destination, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Destination.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Message != null) {\n        const memberEntries = serializeAws_queryMessage(input.Message, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Message.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ReplyToAddresses != null) {\n        const memberEntries = serializeAws_queryAddressList(input.ReplyToAddresses, context);\n        if (input.ReplyToAddresses?.length === 0) {\n            entries.ReplyToAddresses = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ReplyToAddresses.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ReturnPath != null) {\n        entries[\"ReturnPath\"] = input.ReturnPath;\n    }\n    if (input.SourceArn != null) {\n        entries[\"SourceArn\"] = input.SourceArn;\n    }\n    if (input.ReturnPathArn != null) {\n        entries[\"ReturnPathArn\"] = input.ReturnPathArn;\n    }\n    if (input.Tags != null) {\n        const memberEntries = serializeAws_queryMessageTagList(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    return entries;\n};\nconst serializeAws_querySendRawEmailRequest = (input, context) => {\n    const entries = {};\n    if (input.Source != null) {\n        entries[\"Source\"] = input.Source;\n    }\n    if (input.Destinations != null) {\n        const memberEntries = serializeAws_queryAddressList(input.Destinations, context);\n        if (input.Destinations?.length === 0) {\n            entries.Destinations = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Destinations.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.RawMessage != null) {\n        const memberEntries = serializeAws_queryRawMessage(input.RawMessage, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RawMessage.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.FromArn != null) {\n        entries[\"FromArn\"] = input.FromArn;\n    }\n    if (input.SourceArn != null) {\n        entries[\"SourceArn\"] = input.SourceArn;\n    }\n    if (input.ReturnPathArn != null) {\n        entries[\"ReturnPathArn\"] = input.ReturnPathArn;\n    }\n    if (input.Tags != null) {\n        const memberEntries = serializeAws_queryMessageTagList(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    return entries;\n};\nconst serializeAws_querySendTemplatedEmailRequest = (input, context) => {\n    const entries = {};\n    if (input.Source != null) {\n        entries[\"Source\"] = input.Source;\n    }\n    if (input.Destination != null) {\n        const memberEntries = serializeAws_queryDestination(input.Destination, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Destination.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ReplyToAddresses != null) {\n        const memberEntries = serializeAws_queryAddressList(input.ReplyToAddresses, context);\n        if (input.ReplyToAddresses?.length === 0) {\n            entries.ReplyToAddresses = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ReplyToAddresses.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ReturnPath != null) {\n        entries[\"ReturnPath\"] = input.ReturnPath;\n    }\n    if (input.SourceArn != null) {\n        entries[\"SourceArn\"] = input.SourceArn;\n    }\n    if (input.ReturnPathArn != null) {\n        entries[\"ReturnPathArn\"] = input.ReturnPathArn;\n    }\n    if (input.Tags != null) {\n        const memberEntries = serializeAws_queryMessageTagList(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.Template != null) {\n        entries[\"Template\"] = input.Template;\n    }\n    if (input.TemplateArn != null) {\n        entries[\"TemplateArn\"] = input.TemplateArn;\n    }\n    if (input.TemplateData != null) {\n        entries[\"TemplateData\"] = input.TemplateData;\n    }\n    return entries;\n};\nconst serializeAws_querySetActiveReceiptRuleSetRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    return entries;\n};\nconst serializeAws_querySetIdentityDkimEnabledRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    if (input.DkimEnabled != null) {\n        entries[\"DkimEnabled\"] = input.DkimEnabled;\n    }\n    return entries;\n};\nconst serializeAws_querySetIdentityFeedbackForwardingEnabledRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    if (input.ForwardingEnabled != null) {\n        entries[\"ForwardingEnabled\"] = input.ForwardingEnabled;\n    }\n    return entries;\n};\nconst serializeAws_querySetIdentityHeadersInNotificationsEnabledRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    if (input.NotificationType != null) {\n        entries[\"NotificationType\"] = input.NotificationType;\n    }\n    if (input.Enabled != null) {\n        entries[\"Enabled\"] = input.Enabled;\n    }\n    return entries;\n};\nconst serializeAws_querySetIdentityMailFromDomainRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    if (input.MailFromDomain != null) {\n        entries[\"MailFromDomain\"] = input.MailFromDomain;\n    }\n    if (input.BehaviorOnMXFailure != null) {\n        entries[\"BehaviorOnMXFailure\"] = input.BehaviorOnMXFailure;\n    }\n    return entries;\n};\nconst serializeAws_querySetIdentityNotificationTopicRequest = (input, context) => {\n    const entries = {};\n    if (input.Identity != null) {\n        entries[\"Identity\"] = input.Identity;\n    }\n    if (input.NotificationType != null) {\n        entries[\"NotificationType\"] = input.NotificationType;\n    }\n    if (input.SnsTopic != null) {\n        entries[\"SnsTopic\"] = input.SnsTopic;\n    }\n    return entries;\n};\nconst serializeAws_querySetReceiptRulePositionRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    if (input.RuleName != null) {\n        entries[\"RuleName\"] = input.RuleName;\n    }\n    if (input.After != null) {\n        entries[\"After\"] = input.After;\n    }\n    return entries;\n};\nconst serializeAws_querySNSAction = (input, context) => {\n    const entries = {};\n    if (input.TopicArn != null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.Encoding != null) {\n        entries[\"Encoding\"] = input.Encoding;\n    }\n    return entries;\n};\nconst serializeAws_querySNSDestination = (input, context) => {\n    const entries = {};\n    if (input.TopicARN != null) {\n        entries[\"TopicARN\"] = input.TopicARN;\n    }\n    return entries;\n};\nconst serializeAws_queryStopAction = (input, context) => {\n    const entries = {};\n    if (input.Scope != null) {\n        entries[\"Scope\"] = input.Scope;\n    }\n    if (input.TopicArn != null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    return entries;\n};\nconst serializeAws_queryTemplate = (input, context) => {\n    const entries = {};\n    if (input.TemplateName != null) {\n        entries[\"TemplateName\"] = input.TemplateName;\n    }\n    if (input.SubjectPart != null) {\n        entries[\"SubjectPart\"] = input.SubjectPart;\n    }\n    if (input.TextPart != null) {\n        entries[\"TextPart\"] = input.TextPart;\n    }\n    if (input.HtmlPart != null) {\n        entries[\"HtmlPart\"] = input.HtmlPart;\n    }\n    return entries;\n};\nconst serializeAws_queryTestRenderTemplateRequest = (input, context) => {\n    const entries = {};\n    if (input.TemplateName != null) {\n        entries[\"TemplateName\"] = input.TemplateName;\n    }\n    if (input.TemplateData != null) {\n        entries[\"TemplateData\"] = input.TemplateData;\n    }\n    return entries;\n};\nconst serializeAws_queryTrackingOptions = (input, context) => {\n    const entries = {};\n    if (input.CustomRedirectDomain != null) {\n        entries[\"CustomRedirectDomain\"] = input.CustomRedirectDomain;\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateAccountSendingEnabledRequest = (input, context) => {\n    const entries = {};\n    if (input.Enabled != null) {\n        entries[\"Enabled\"] = input.Enabled;\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateConfigurationSetEventDestinationRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.EventDestination != null) {\n        const memberEntries = serializeAws_queryEventDestination(input.EventDestination, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `EventDestination.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateConfigurationSetReputationMetricsEnabledRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.Enabled != null) {\n        entries[\"Enabled\"] = input.Enabled;\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateConfigurationSetSendingEnabledRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.Enabled != null) {\n        entries[\"Enabled\"] = input.Enabled;\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateConfigurationSetTrackingOptionsRequest = (input, context) => {\n    const entries = {};\n    if (input.ConfigurationSetName != null) {\n        entries[\"ConfigurationSetName\"] = input.ConfigurationSetName;\n    }\n    if (input.TrackingOptions != null) {\n        const memberEntries = serializeAws_queryTrackingOptions(input.TrackingOptions, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TrackingOptions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateCustomVerificationEmailTemplateRequest = (input, context) => {\n    const entries = {};\n    if (input.TemplateName != null) {\n        entries[\"TemplateName\"] = input.TemplateName;\n    }\n    if (input.FromEmailAddress != null) {\n        entries[\"FromEmailAddress\"] = input.FromEmailAddress;\n    }\n    if (input.TemplateSubject != null) {\n        entries[\"TemplateSubject\"] = input.TemplateSubject;\n    }\n    if (input.TemplateContent != null) {\n        entries[\"TemplateContent\"] = input.TemplateContent;\n    }\n    if (input.SuccessRedirectionURL != null) {\n        entries[\"SuccessRedirectionURL\"] = input.SuccessRedirectionURL;\n    }\n    if (input.FailureRedirectionURL != null) {\n        entries[\"FailureRedirectionURL\"] = input.FailureRedirectionURL;\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateReceiptRuleRequest = (input, context) => {\n    const entries = {};\n    if (input.RuleSetName != null) {\n        entries[\"RuleSetName\"] = input.RuleSetName;\n    }\n    if (input.Rule != null) {\n        const memberEntries = serializeAws_queryReceiptRule(input.Rule, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Rule.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateTemplateRequest = (input, context) => {\n    const entries = {};\n    if (input.Template != null) {\n        const memberEntries = serializeAws_queryTemplate(input.Template, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Template.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryVerifyDomainDkimRequest = (input, context) => {\n    const entries = {};\n    if (input.Domain != null) {\n        entries[\"Domain\"] = input.Domain;\n    }\n    return entries;\n};\nconst serializeAws_queryVerifyDomainIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.Domain != null) {\n        entries[\"Domain\"] = input.Domain;\n    }\n    return entries;\n};\nconst serializeAws_queryVerifyEmailAddressRequest = (input, context) => {\n    const entries = {};\n    if (input.EmailAddress != null) {\n        entries[\"EmailAddress\"] = input.EmailAddress;\n    }\n    return entries;\n};\nconst serializeAws_queryVerifyEmailIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.EmailAddress != null) {\n        entries[\"EmailAddress\"] = input.EmailAddress;\n    }\n    return entries;\n};\nconst serializeAws_queryWorkmailAction = (input, context) => {\n    const entries = {};\n    if (input.TopicArn != null) {\n        entries[\"TopicArn\"] = input.TopicArn;\n    }\n    if (input.OrganizationArn != null) {\n        entries[\"OrganizationArn\"] = input.OrganizationArn;\n    }\n    return entries;\n};\nconst deserializeAws_queryAccountSendingPausedException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAddHeaderAction = (output, context) => {\n    const contents = {\n        HeaderName: undefined,\n        HeaderValue: undefined,\n    };\n    if (output[\"HeaderName\"] !== undefined) {\n        contents.HeaderName = __expectString(output[\"HeaderName\"]);\n    }\n    if (output[\"HeaderValue\"] !== undefined) {\n        contents.HeaderValue = __expectString(output[\"HeaderValue\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAddressList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst deserializeAws_queryAlreadyExistsException = (output, context) => {\n    const contents = {\n        Name: undefined,\n        message: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryBounceAction = (output, context) => {\n    const contents = {\n        TopicArn: undefined,\n        SmtpReplyCode: undefined,\n        StatusCode: undefined,\n        Message: undefined,\n        Sender: undefined,\n    };\n    if (output[\"TopicArn\"] !== undefined) {\n        contents.TopicArn = __expectString(output[\"TopicArn\"]);\n    }\n    if (output[\"SmtpReplyCode\"] !== undefined) {\n        contents.SmtpReplyCode = __expectString(output[\"SmtpReplyCode\"]);\n    }\n    if (output[\"StatusCode\"] !== undefined) {\n        contents.StatusCode = __expectString(output[\"StatusCode\"]);\n    }\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = __expectString(output[\"Message\"]);\n    }\n    if (output[\"Sender\"] !== undefined) {\n        contents.Sender = __expectString(output[\"Sender\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryBulkEmailDestinationStatus = (output, context) => {\n    const contents = {\n        Status: undefined,\n        Error: undefined,\n        MessageId: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = __expectString(output[\"Status\"]);\n    }\n    if (output[\"Error\"] !== undefined) {\n        contents.Error = __expectString(output[\"Error\"]);\n    }\n    if (output[\"MessageId\"] !== undefined) {\n        contents.MessageId = __expectString(output[\"MessageId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryBulkEmailDestinationStatusList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryBulkEmailDestinationStatus(entry, context);\n    });\n};\nconst deserializeAws_queryCannotDeleteException = (output, context) => {\n    const contents = {\n        Name: undefined,\n        message: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCloneReceiptRuleSetResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCloudWatchDestination = (output, context) => {\n    const contents = {\n        DimensionConfigurations: undefined,\n    };\n    if (output.DimensionConfigurations === \"\") {\n        contents.DimensionConfigurations = [];\n    }\n    else if (output[\"DimensionConfigurations\"] !== undefined &&\n        output[\"DimensionConfigurations\"][\"member\"] !== undefined) {\n        contents.DimensionConfigurations = deserializeAws_queryCloudWatchDimensionConfigurations(__getArrayIfSingleItem(output[\"DimensionConfigurations\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryCloudWatchDimensionConfiguration = (output, context) => {\n    const contents = {\n        DimensionName: undefined,\n        DimensionValueSource: undefined,\n        DefaultDimensionValue: undefined,\n    };\n    if (output[\"DimensionName\"] !== undefined) {\n        contents.DimensionName = __expectString(output[\"DimensionName\"]);\n    }\n    if (output[\"DimensionValueSource\"] !== undefined) {\n        contents.DimensionValueSource = __expectString(output[\"DimensionValueSource\"]);\n    }\n    if (output[\"DefaultDimensionValue\"] !== undefined) {\n        contents.DefaultDimensionValue = __expectString(output[\"DefaultDimensionValue\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCloudWatchDimensionConfigurations = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryCloudWatchDimensionConfiguration(entry, context);\n    });\n};\nconst deserializeAws_queryConfigurationSet = (output, context) => {\n    const contents = {\n        Name: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryConfigurationSetAlreadyExistsException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryConfigurationSetDoesNotExistException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryConfigurationSets = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryConfigurationSet(entry, context);\n    });\n};\nconst deserializeAws_queryConfigurationSetSendingPausedException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCreateConfigurationSetEventDestinationResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCreateConfigurationSetResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCreateConfigurationSetTrackingOptionsResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCreateReceiptFilterResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCreateReceiptRuleResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCreateReceiptRuleSetResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCreateTemplateResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCustomVerificationEmailInvalidContentException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCustomVerificationEmailTemplate = (output, context) => {\n    const contents = {\n        TemplateName: undefined,\n        FromEmailAddress: undefined,\n        TemplateSubject: undefined,\n        SuccessRedirectionURL: undefined,\n        FailureRedirectionURL: undefined,\n    };\n    if (output[\"TemplateName\"] !== undefined) {\n        contents.TemplateName = __expectString(output[\"TemplateName\"]);\n    }\n    if (output[\"FromEmailAddress\"] !== undefined) {\n        contents.FromEmailAddress = __expectString(output[\"FromEmailAddress\"]);\n    }\n    if (output[\"TemplateSubject\"] !== undefined) {\n        contents.TemplateSubject = __expectString(output[\"TemplateSubject\"]);\n    }\n    if (output[\"SuccessRedirectionURL\"] !== undefined) {\n        contents.SuccessRedirectionURL = __expectString(output[\"SuccessRedirectionURL\"]);\n    }\n    if (output[\"FailureRedirectionURL\"] !== undefined) {\n        contents.FailureRedirectionURL = __expectString(output[\"FailureRedirectionURL\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCustomVerificationEmailTemplateAlreadyExistsException = (output, context) => {\n    const contents = {\n        CustomVerificationEmailTemplateName: undefined,\n        message: undefined,\n    };\n    if (output[\"CustomVerificationEmailTemplateName\"] !== undefined) {\n        contents.CustomVerificationEmailTemplateName = __expectString(output[\"CustomVerificationEmailTemplateName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCustomVerificationEmailTemplateDoesNotExistException = (output, context) => {\n    const contents = {\n        CustomVerificationEmailTemplateName: undefined,\n        message: undefined,\n    };\n    if (output[\"CustomVerificationEmailTemplateName\"] !== undefined) {\n        contents.CustomVerificationEmailTemplateName = __expectString(output[\"CustomVerificationEmailTemplateName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCustomVerificationEmailTemplates = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryCustomVerificationEmailTemplate(entry, context);\n    });\n};\nconst deserializeAws_queryDeleteConfigurationSetEventDestinationResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteConfigurationSetResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteConfigurationSetTrackingOptionsResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteIdentityPolicyResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteIdentityResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteReceiptFilterResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteReceiptRuleResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteReceiptRuleSetResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteTemplateResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeliveryOptions = (output, context) => {\n    const contents = {\n        TlsPolicy: undefined,\n    };\n    if (output[\"TlsPolicy\"] !== undefined) {\n        contents.TlsPolicy = __expectString(output[\"TlsPolicy\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeActiveReceiptRuleSetResponse = (output, context) => {\n    const contents = {\n        Metadata: undefined,\n        Rules: undefined,\n    };\n    if (output[\"Metadata\"] !== undefined) {\n        contents.Metadata = deserializeAws_queryReceiptRuleSetMetadata(output[\"Metadata\"], context);\n    }\n    if (output.Rules === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rules\"] !== undefined && output[\"Rules\"][\"member\"] !== undefined) {\n        contents.Rules = deserializeAws_queryReceiptRulesList(__getArrayIfSingleItem(output[\"Rules\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeConfigurationSetResponse = (output, context) => {\n    const contents = {\n        ConfigurationSet: undefined,\n        EventDestinations: undefined,\n        TrackingOptions: undefined,\n        DeliveryOptions: undefined,\n        ReputationOptions: undefined,\n    };\n    if (output[\"ConfigurationSet\"] !== undefined) {\n        contents.ConfigurationSet = deserializeAws_queryConfigurationSet(output[\"ConfigurationSet\"], context);\n    }\n    if (output.EventDestinations === \"\") {\n        contents.EventDestinations = [];\n    }\n    else if (output[\"EventDestinations\"] !== undefined && output[\"EventDestinations\"][\"member\"] !== undefined) {\n        contents.EventDestinations = deserializeAws_queryEventDestinations(__getArrayIfSingleItem(output[\"EventDestinations\"][\"member\"]), context);\n    }\n    if (output[\"TrackingOptions\"] !== undefined) {\n        contents.TrackingOptions = deserializeAws_queryTrackingOptions(output[\"TrackingOptions\"], context);\n    }\n    if (output[\"DeliveryOptions\"] !== undefined) {\n        contents.DeliveryOptions = deserializeAws_queryDeliveryOptions(output[\"DeliveryOptions\"], context);\n    }\n    if (output[\"ReputationOptions\"] !== undefined) {\n        contents.ReputationOptions = deserializeAws_queryReputationOptions(output[\"ReputationOptions\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeReceiptRuleResponse = (output, context) => {\n    const contents = {\n        Rule: undefined,\n    };\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rule = deserializeAws_queryReceiptRule(output[\"Rule\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeReceiptRuleSetResponse = (output, context) => {\n    const contents = {\n        Metadata: undefined,\n        Rules: undefined,\n    };\n    if (output[\"Metadata\"] !== undefined) {\n        contents.Metadata = deserializeAws_queryReceiptRuleSetMetadata(output[\"Metadata\"], context);\n    }\n    if (output.Rules === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rules\"] !== undefined && output[\"Rules\"][\"member\"] !== undefined) {\n        contents.Rules = deserializeAws_queryReceiptRulesList(__getArrayIfSingleItem(output[\"Rules\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDkimAttributes = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = deserializeAws_queryIdentityDkimAttributes(pair[\"value\"], context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_queryEventDestination = (output, context) => {\n    const contents = {\n        Name: undefined,\n        Enabled: undefined,\n        MatchingEventTypes: undefined,\n        KinesisFirehoseDestination: undefined,\n        CloudWatchDestination: undefined,\n        SNSDestination: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = __parseBoolean(output[\"Enabled\"]);\n    }\n    if (output.MatchingEventTypes === \"\") {\n        contents.MatchingEventTypes = [];\n    }\n    else if (output[\"MatchingEventTypes\"] !== undefined && output[\"MatchingEventTypes\"][\"member\"] !== undefined) {\n        contents.MatchingEventTypes = deserializeAws_queryEventTypes(__getArrayIfSingleItem(output[\"MatchingEventTypes\"][\"member\"]), context);\n    }\n    if (output[\"KinesisFirehoseDestination\"] !== undefined) {\n        contents.KinesisFirehoseDestination = deserializeAws_queryKinesisFirehoseDestination(output[\"KinesisFirehoseDestination\"], context);\n    }\n    if (output[\"CloudWatchDestination\"] !== undefined) {\n        contents.CloudWatchDestination = deserializeAws_queryCloudWatchDestination(output[\"CloudWatchDestination\"], context);\n    }\n    if (output[\"SNSDestination\"] !== undefined) {\n        contents.SNSDestination = deserializeAws_querySNSDestination(output[\"SNSDestination\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryEventDestinationAlreadyExistsException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        EventDestinationName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"EventDestinationName\"] !== undefined) {\n        contents.EventDestinationName = __expectString(output[\"EventDestinationName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryEventDestinationDoesNotExistException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        EventDestinationName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"EventDestinationName\"] !== undefined) {\n        contents.EventDestinationName = __expectString(output[\"EventDestinationName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryEventDestinations = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryEventDestination(entry, context);\n    });\n};\nconst deserializeAws_queryEventTypes = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst deserializeAws_queryFromEmailAddressNotVerifiedException = (output, context) => {\n    const contents = {\n        FromEmailAddress: undefined,\n        message: undefined,\n    };\n    if (output[\"FromEmailAddress\"] !== undefined) {\n        contents.FromEmailAddress = __expectString(output[\"FromEmailAddress\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetAccountSendingEnabledResponse = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = __parseBoolean(output[\"Enabled\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetCustomVerificationEmailTemplateResponse = (output, context) => {\n    const contents = {\n        TemplateName: undefined,\n        FromEmailAddress: undefined,\n        TemplateSubject: undefined,\n        TemplateContent: undefined,\n        SuccessRedirectionURL: undefined,\n        FailureRedirectionURL: undefined,\n    };\n    if (output[\"TemplateName\"] !== undefined) {\n        contents.TemplateName = __expectString(output[\"TemplateName\"]);\n    }\n    if (output[\"FromEmailAddress\"] !== undefined) {\n        contents.FromEmailAddress = __expectString(output[\"FromEmailAddress\"]);\n    }\n    if (output[\"TemplateSubject\"] !== undefined) {\n        contents.TemplateSubject = __expectString(output[\"TemplateSubject\"]);\n    }\n    if (output[\"TemplateContent\"] !== undefined) {\n        contents.TemplateContent = __expectString(output[\"TemplateContent\"]);\n    }\n    if (output[\"SuccessRedirectionURL\"] !== undefined) {\n        contents.SuccessRedirectionURL = __expectString(output[\"SuccessRedirectionURL\"]);\n    }\n    if (output[\"FailureRedirectionURL\"] !== undefined) {\n        contents.FailureRedirectionURL = __expectString(output[\"FailureRedirectionURL\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetIdentityDkimAttributesResponse = (output, context) => {\n    const contents = {\n        DkimAttributes: undefined,\n    };\n    if (output.DkimAttributes === \"\") {\n        contents.DkimAttributes = {};\n    }\n    else if (output[\"DkimAttributes\"] !== undefined && output[\"DkimAttributes\"][\"entry\"] !== undefined) {\n        contents.DkimAttributes = deserializeAws_queryDkimAttributes(__getArrayIfSingleItem(output[\"DkimAttributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetIdentityMailFromDomainAttributesResponse = (output, context) => {\n    const contents = {\n        MailFromDomainAttributes: undefined,\n    };\n    if (output.MailFromDomainAttributes === \"\") {\n        contents.MailFromDomainAttributes = {};\n    }\n    else if (output[\"MailFromDomainAttributes\"] !== undefined &&\n        output[\"MailFromDomainAttributes\"][\"entry\"] !== undefined) {\n        contents.MailFromDomainAttributes = deserializeAws_queryMailFromDomainAttributes(__getArrayIfSingleItem(output[\"MailFromDomainAttributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetIdentityNotificationAttributesResponse = (output, context) => {\n    const contents = {\n        NotificationAttributes: undefined,\n    };\n    if (output.NotificationAttributes === \"\") {\n        contents.NotificationAttributes = {};\n    }\n    else if (output[\"NotificationAttributes\"] !== undefined &&\n        output[\"NotificationAttributes\"][\"entry\"] !== undefined) {\n        contents.NotificationAttributes = deserializeAws_queryNotificationAttributes(__getArrayIfSingleItem(output[\"NotificationAttributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetIdentityPoliciesResponse = (output, context) => {\n    const contents = {\n        Policies: undefined,\n    };\n    if (output.Policies === \"\") {\n        contents.Policies = {};\n    }\n    else if (output[\"Policies\"] !== undefined && output[\"Policies\"][\"entry\"] !== undefined) {\n        contents.Policies = deserializeAws_queryPolicyMap(__getArrayIfSingleItem(output[\"Policies\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetIdentityVerificationAttributesResponse = (output, context) => {\n    const contents = {\n        VerificationAttributes: undefined,\n    };\n    if (output.VerificationAttributes === \"\") {\n        contents.VerificationAttributes = {};\n    }\n    else if (output[\"VerificationAttributes\"] !== undefined &&\n        output[\"VerificationAttributes\"][\"entry\"] !== undefined) {\n        contents.VerificationAttributes = deserializeAws_queryVerificationAttributes(__getArrayIfSingleItem(output[\"VerificationAttributes\"][\"entry\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSendQuotaResponse = (output, context) => {\n    const contents = {\n        Max24HourSend: undefined,\n        MaxSendRate: undefined,\n        SentLast24Hours: undefined,\n    };\n    if (output[\"Max24HourSend\"] !== undefined) {\n        contents.Max24HourSend = __strictParseFloat(output[\"Max24HourSend\"]);\n    }\n    if (output[\"MaxSendRate\"] !== undefined) {\n        contents.MaxSendRate = __strictParseFloat(output[\"MaxSendRate\"]);\n    }\n    if (output[\"SentLast24Hours\"] !== undefined) {\n        contents.SentLast24Hours = __strictParseFloat(output[\"SentLast24Hours\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSendStatisticsResponse = (output, context) => {\n    const contents = {\n        SendDataPoints: undefined,\n    };\n    if (output.SendDataPoints === \"\") {\n        contents.SendDataPoints = [];\n    }\n    else if (output[\"SendDataPoints\"] !== undefined && output[\"SendDataPoints\"][\"member\"] !== undefined) {\n        contents.SendDataPoints = deserializeAws_querySendDataPointList(__getArrayIfSingleItem(output[\"SendDataPoints\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetTemplateResponse = (output, context) => {\n    const contents = {\n        Template: undefined,\n    };\n    if (output[\"Template\"] !== undefined) {\n        contents.Template = deserializeAws_queryTemplate(output[\"Template\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryIdentityDkimAttributes = (output, context) => {\n    const contents = {\n        DkimEnabled: undefined,\n        DkimVerificationStatus: undefined,\n        DkimTokens: undefined,\n    };\n    if (output[\"DkimEnabled\"] !== undefined) {\n        contents.DkimEnabled = __parseBoolean(output[\"DkimEnabled\"]);\n    }\n    if (output[\"DkimVerificationStatus\"] !== undefined) {\n        contents.DkimVerificationStatus = __expectString(output[\"DkimVerificationStatus\"]);\n    }\n    if (output.DkimTokens === \"\") {\n        contents.DkimTokens = [];\n    }\n    else if (output[\"DkimTokens\"] !== undefined && output[\"DkimTokens\"][\"member\"] !== undefined) {\n        contents.DkimTokens = deserializeAws_queryVerificationTokenList(__getArrayIfSingleItem(output[\"DkimTokens\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryIdentityList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst deserializeAws_queryIdentityMailFromDomainAttributes = (output, context) => {\n    const contents = {\n        MailFromDomain: undefined,\n        MailFromDomainStatus: undefined,\n        BehaviorOnMXFailure: undefined,\n    };\n    if (output[\"MailFromDomain\"] !== undefined) {\n        contents.MailFromDomain = __expectString(output[\"MailFromDomain\"]);\n    }\n    if (output[\"MailFromDomainStatus\"] !== undefined) {\n        contents.MailFromDomainStatus = __expectString(output[\"MailFromDomainStatus\"]);\n    }\n    if (output[\"BehaviorOnMXFailure\"] !== undefined) {\n        contents.BehaviorOnMXFailure = __expectString(output[\"BehaviorOnMXFailure\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryIdentityNotificationAttributes = (output, context) => {\n    const contents = {\n        BounceTopic: undefined,\n        ComplaintTopic: undefined,\n        DeliveryTopic: undefined,\n        ForwardingEnabled: undefined,\n        HeadersInBounceNotificationsEnabled: undefined,\n        HeadersInComplaintNotificationsEnabled: undefined,\n        HeadersInDeliveryNotificationsEnabled: undefined,\n    };\n    if (output[\"BounceTopic\"] !== undefined) {\n        contents.BounceTopic = __expectString(output[\"BounceTopic\"]);\n    }\n    if (output[\"ComplaintTopic\"] !== undefined) {\n        contents.ComplaintTopic = __expectString(output[\"ComplaintTopic\"]);\n    }\n    if (output[\"DeliveryTopic\"] !== undefined) {\n        contents.DeliveryTopic = __expectString(output[\"DeliveryTopic\"]);\n    }\n    if (output[\"ForwardingEnabled\"] !== undefined) {\n        contents.ForwardingEnabled = __parseBoolean(output[\"ForwardingEnabled\"]);\n    }\n    if (output[\"HeadersInBounceNotificationsEnabled\"] !== undefined) {\n        contents.HeadersInBounceNotificationsEnabled = __parseBoolean(output[\"HeadersInBounceNotificationsEnabled\"]);\n    }\n    if (output[\"HeadersInComplaintNotificationsEnabled\"] !== undefined) {\n        contents.HeadersInComplaintNotificationsEnabled = __parseBoolean(output[\"HeadersInComplaintNotificationsEnabled\"]);\n    }\n    if (output[\"HeadersInDeliveryNotificationsEnabled\"] !== undefined) {\n        contents.HeadersInDeliveryNotificationsEnabled = __parseBoolean(output[\"HeadersInDeliveryNotificationsEnabled\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryIdentityVerificationAttributes = (output, context) => {\n    const contents = {\n        VerificationStatus: undefined,\n        VerificationToken: undefined,\n    };\n    if (output[\"VerificationStatus\"] !== undefined) {\n        contents.VerificationStatus = __expectString(output[\"VerificationStatus\"]);\n    }\n    if (output[\"VerificationToken\"] !== undefined) {\n        contents.VerificationToken = __expectString(output[\"VerificationToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidCloudWatchDestinationException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        EventDestinationName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"EventDestinationName\"] !== undefined) {\n        contents.EventDestinationName = __expectString(output[\"EventDestinationName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidConfigurationSetException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidDeliveryOptionsException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidFirehoseDestinationException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        EventDestinationName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"EventDestinationName\"] !== undefined) {\n        contents.EventDestinationName = __expectString(output[\"EventDestinationName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidLambdaFunctionException = (output, context) => {\n    const contents = {\n        FunctionArn: undefined,\n        message: undefined,\n    };\n    if (output[\"FunctionArn\"] !== undefined) {\n        contents.FunctionArn = __expectString(output[\"FunctionArn\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidPolicyException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidRenderingParameterException = (output, context) => {\n    const contents = {\n        TemplateName: undefined,\n        message: undefined,\n    };\n    if (output[\"TemplateName\"] !== undefined) {\n        contents.TemplateName = __expectString(output[\"TemplateName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidS3ConfigurationException = (output, context) => {\n    const contents = {\n        Bucket: undefined,\n        message: undefined,\n    };\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = __expectString(output[\"Bucket\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidSNSDestinationException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        EventDestinationName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"EventDestinationName\"] !== undefined) {\n        contents.EventDestinationName = __expectString(output[\"EventDestinationName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidSnsTopicException = (output, context) => {\n    const contents = {\n        Topic: undefined,\n        message: undefined,\n    };\n    if (output[\"Topic\"] !== undefined) {\n        contents.Topic = __expectString(output[\"Topic\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidTemplateException = (output, context) => {\n    const contents = {\n        TemplateName: undefined,\n        message: undefined,\n    };\n    if (output[\"TemplateName\"] !== undefined) {\n        contents.TemplateName = __expectString(output[\"TemplateName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidTrackingOptionsException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryKinesisFirehoseDestination = (output, context) => {\n    const contents = {\n        IAMRoleARN: undefined,\n        DeliveryStreamARN: undefined,\n    };\n    if (output[\"IAMRoleARN\"] !== undefined) {\n        contents.IAMRoleARN = __expectString(output[\"IAMRoleARN\"]);\n    }\n    if (output[\"DeliveryStreamARN\"] !== undefined) {\n        contents.DeliveryStreamARN = __expectString(output[\"DeliveryStreamARN\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryLambdaAction = (output, context) => {\n    const contents = {\n        TopicArn: undefined,\n        FunctionArn: undefined,\n        InvocationType: undefined,\n    };\n    if (output[\"TopicArn\"] !== undefined) {\n        contents.TopicArn = __expectString(output[\"TopicArn\"]);\n    }\n    if (output[\"FunctionArn\"] !== undefined) {\n        contents.FunctionArn = __expectString(output[\"FunctionArn\"]);\n    }\n    if (output[\"InvocationType\"] !== undefined) {\n        contents.InvocationType = __expectString(output[\"InvocationType\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryLimitExceededException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListConfigurationSetsResponse = (output, context) => {\n    const contents = {\n        ConfigurationSets: undefined,\n        NextToken: undefined,\n    };\n    if (output.ConfigurationSets === \"\") {\n        contents.ConfigurationSets = [];\n    }\n    else if (output[\"ConfigurationSets\"] !== undefined && output[\"ConfigurationSets\"][\"member\"] !== undefined) {\n        contents.ConfigurationSets = deserializeAws_queryConfigurationSets(__getArrayIfSingleItem(output[\"ConfigurationSets\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = __expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListCustomVerificationEmailTemplatesResponse = (output, context) => {\n    const contents = {\n        CustomVerificationEmailTemplates: undefined,\n        NextToken: undefined,\n    };\n    if (output.CustomVerificationEmailTemplates === \"\") {\n        contents.CustomVerificationEmailTemplates = [];\n    }\n    else if (output[\"CustomVerificationEmailTemplates\"] !== undefined &&\n        output[\"CustomVerificationEmailTemplates\"][\"member\"] !== undefined) {\n        contents.CustomVerificationEmailTemplates = deserializeAws_queryCustomVerificationEmailTemplates(__getArrayIfSingleItem(output[\"CustomVerificationEmailTemplates\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = __expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListIdentitiesResponse = (output, context) => {\n    const contents = {\n        Identities: undefined,\n        NextToken: undefined,\n    };\n    if (output.Identities === \"\") {\n        contents.Identities = [];\n    }\n    else if (output[\"Identities\"] !== undefined && output[\"Identities\"][\"member\"] !== undefined) {\n        contents.Identities = deserializeAws_queryIdentityList(__getArrayIfSingleItem(output[\"Identities\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = __expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListIdentityPoliciesResponse = (output, context) => {\n    const contents = {\n        PolicyNames: undefined,\n    };\n    if (output.PolicyNames === \"\") {\n        contents.PolicyNames = [];\n    }\n    else if (output[\"PolicyNames\"] !== undefined && output[\"PolicyNames\"][\"member\"] !== undefined) {\n        contents.PolicyNames = deserializeAws_queryPolicyNameList(__getArrayIfSingleItem(output[\"PolicyNames\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryListReceiptFiltersResponse = (output, context) => {\n    const contents = {\n        Filters: undefined,\n    };\n    if (output.Filters === \"\") {\n        contents.Filters = [];\n    }\n    else if (output[\"Filters\"] !== undefined && output[\"Filters\"][\"member\"] !== undefined) {\n        contents.Filters = deserializeAws_queryReceiptFilterList(__getArrayIfSingleItem(output[\"Filters\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryListReceiptRuleSetsResponse = (output, context) => {\n    const contents = {\n        RuleSets: undefined,\n        NextToken: undefined,\n    };\n    if (output.RuleSets === \"\") {\n        contents.RuleSets = [];\n    }\n    else if (output[\"RuleSets\"] !== undefined && output[\"RuleSets\"][\"member\"] !== undefined) {\n        contents.RuleSets = deserializeAws_queryReceiptRuleSetsLists(__getArrayIfSingleItem(output[\"RuleSets\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = __expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListTemplatesResponse = (output, context) => {\n    const contents = {\n        TemplatesMetadata: undefined,\n        NextToken: undefined,\n    };\n    if (output.TemplatesMetadata === \"\") {\n        contents.TemplatesMetadata = [];\n    }\n    else if (output[\"TemplatesMetadata\"] !== undefined && output[\"TemplatesMetadata\"][\"member\"] !== undefined) {\n        contents.TemplatesMetadata = deserializeAws_queryTemplateMetadataList(__getArrayIfSingleItem(output[\"TemplatesMetadata\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = __expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListVerifiedEmailAddressesResponse = (output, context) => {\n    const contents = {\n        VerifiedEmailAddresses: undefined,\n    };\n    if (output.VerifiedEmailAddresses === \"\") {\n        contents.VerifiedEmailAddresses = [];\n    }\n    else if (output[\"VerifiedEmailAddresses\"] !== undefined &&\n        output[\"VerifiedEmailAddresses\"][\"member\"] !== undefined) {\n        contents.VerifiedEmailAddresses = deserializeAws_queryAddressList(__getArrayIfSingleItem(output[\"VerifiedEmailAddresses\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryMailFromDomainAttributes = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = deserializeAws_queryIdentityMailFromDomainAttributes(pair[\"value\"], context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_queryMailFromDomainNotVerifiedException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryMessageRejected = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryMissingRenderingAttributeException = (output, context) => {\n    const contents = {\n        TemplateName: undefined,\n        message: undefined,\n    };\n    if (output[\"TemplateName\"] !== undefined) {\n        contents.TemplateName = __expectString(output[\"TemplateName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryNotificationAttributes = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = deserializeAws_queryIdentityNotificationAttributes(pair[\"value\"], context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_queryPolicyMap = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = __expectString(pair[\"value\"]);\n        return acc;\n    }, {});\n};\nconst deserializeAws_queryPolicyNameList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst deserializeAws_queryProductionAccessNotGrantedException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPutConfigurationSetDeliveryOptionsResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryPutIdentityPolicyResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryReceiptAction = (output, context) => {\n    const contents = {\n        S3Action: undefined,\n        BounceAction: undefined,\n        WorkmailAction: undefined,\n        LambdaAction: undefined,\n        StopAction: undefined,\n        AddHeaderAction: undefined,\n        SNSAction: undefined,\n    };\n    if (output[\"S3Action\"] !== undefined) {\n        contents.S3Action = deserializeAws_queryS3Action(output[\"S3Action\"], context);\n    }\n    if (output[\"BounceAction\"] !== undefined) {\n        contents.BounceAction = deserializeAws_queryBounceAction(output[\"BounceAction\"], context);\n    }\n    if (output[\"WorkmailAction\"] !== undefined) {\n        contents.WorkmailAction = deserializeAws_queryWorkmailAction(output[\"WorkmailAction\"], context);\n    }\n    if (output[\"LambdaAction\"] !== undefined) {\n        contents.LambdaAction = deserializeAws_queryLambdaAction(output[\"LambdaAction\"], context);\n    }\n    if (output[\"StopAction\"] !== undefined) {\n        contents.StopAction = deserializeAws_queryStopAction(output[\"StopAction\"], context);\n    }\n    if (output[\"AddHeaderAction\"] !== undefined) {\n        contents.AddHeaderAction = deserializeAws_queryAddHeaderAction(output[\"AddHeaderAction\"], context);\n    }\n    if (output[\"SNSAction\"] !== undefined) {\n        contents.SNSAction = deserializeAws_querySNSAction(output[\"SNSAction\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryReceiptActionsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryReceiptAction(entry, context);\n    });\n};\nconst deserializeAws_queryReceiptFilter = (output, context) => {\n    const contents = {\n        Name: undefined,\n        IpFilter: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"IpFilter\"] !== undefined) {\n        contents.IpFilter = deserializeAws_queryReceiptIpFilter(output[\"IpFilter\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryReceiptFilterList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryReceiptFilter(entry, context);\n    });\n};\nconst deserializeAws_queryReceiptIpFilter = (output, context) => {\n    const contents = {\n        Policy: undefined,\n        Cidr: undefined,\n    };\n    if (output[\"Policy\"] !== undefined) {\n        contents.Policy = __expectString(output[\"Policy\"]);\n    }\n    if (output[\"Cidr\"] !== undefined) {\n        contents.Cidr = __expectString(output[\"Cidr\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryReceiptRule = (output, context) => {\n    const contents = {\n        Name: undefined,\n        Enabled: undefined,\n        TlsPolicy: undefined,\n        Recipients: undefined,\n        Actions: undefined,\n        ScanEnabled: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = __parseBoolean(output[\"Enabled\"]);\n    }\n    if (output[\"TlsPolicy\"] !== undefined) {\n        contents.TlsPolicy = __expectString(output[\"TlsPolicy\"]);\n    }\n    if (output.Recipients === \"\") {\n        contents.Recipients = [];\n    }\n    else if (output[\"Recipients\"] !== undefined && output[\"Recipients\"][\"member\"] !== undefined) {\n        contents.Recipients = deserializeAws_queryRecipientsList(__getArrayIfSingleItem(output[\"Recipients\"][\"member\"]), context);\n    }\n    if (output.Actions === \"\") {\n        contents.Actions = [];\n    }\n    else if (output[\"Actions\"] !== undefined && output[\"Actions\"][\"member\"] !== undefined) {\n        contents.Actions = deserializeAws_queryReceiptActionsList(__getArrayIfSingleItem(output[\"Actions\"][\"member\"]), context);\n    }\n    if (output[\"ScanEnabled\"] !== undefined) {\n        contents.ScanEnabled = __parseBoolean(output[\"ScanEnabled\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryReceiptRuleSetMetadata = (output, context) => {\n    const contents = {\n        Name: undefined,\n        CreatedTimestamp: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"CreatedTimestamp\"] !== undefined) {\n        contents.CreatedTimestamp = __expectNonNull(__parseRfc3339DateTime(output[\"CreatedTimestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryReceiptRuleSetsLists = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryReceiptRuleSetMetadata(entry, context);\n    });\n};\nconst deserializeAws_queryReceiptRulesList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryReceiptRule(entry, context);\n    });\n};\nconst deserializeAws_queryRecipientsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst deserializeAws_queryReorderReceiptRuleSetResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryReputationOptions = (output, context) => {\n    const contents = {\n        SendingEnabled: undefined,\n        ReputationMetricsEnabled: undefined,\n        LastFreshStart: undefined,\n    };\n    if (output[\"SendingEnabled\"] !== undefined) {\n        contents.SendingEnabled = __parseBoolean(output[\"SendingEnabled\"]);\n    }\n    if (output[\"ReputationMetricsEnabled\"] !== undefined) {\n        contents.ReputationMetricsEnabled = __parseBoolean(output[\"ReputationMetricsEnabled\"]);\n    }\n    if (output[\"LastFreshStart\"] !== undefined) {\n        contents.LastFreshStart = __expectNonNull(__parseRfc3339DateTime(output[\"LastFreshStart\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryRuleDoesNotExistException = (output, context) => {\n    const contents = {\n        Name: undefined,\n        message: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRuleSetDoesNotExistException = (output, context) => {\n    const contents = {\n        Name: undefined,\n        message: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryS3Action = (output, context) => {\n    const contents = {\n        TopicArn: undefined,\n        BucketName: undefined,\n        ObjectKeyPrefix: undefined,\n        KmsKeyArn: undefined,\n    };\n    if (output[\"TopicArn\"] !== undefined) {\n        contents.TopicArn = __expectString(output[\"TopicArn\"]);\n    }\n    if (output[\"BucketName\"] !== undefined) {\n        contents.BucketName = __expectString(output[\"BucketName\"]);\n    }\n    if (output[\"ObjectKeyPrefix\"] !== undefined) {\n        contents.ObjectKeyPrefix = __expectString(output[\"ObjectKeyPrefix\"]);\n    }\n    if (output[\"KmsKeyArn\"] !== undefined) {\n        contents.KmsKeyArn = __expectString(output[\"KmsKeyArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySendBounceResponse = (output, context) => {\n    const contents = {\n        MessageId: undefined,\n    };\n    if (output[\"MessageId\"] !== undefined) {\n        contents.MessageId = __expectString(output[\"MessageId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySendBulkTemplatedEmailResponse = (output, context) => {\n    const contents = {\n        Status: undefined,\n    };\n    if (output.Status === \"\") {\n        contents.Status = [];\n    }\n    else if (output[\"Status\"] !== undefined && output[\"Status\"][\"member\"] !== undefined) {\n        contents.Status = deserializeAws_queryBulkEmailDestinationStatusList(__getArrayIfSingleItem(output[\"Status\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_querySendCustomVerificationEmailResponse = (output, context) => {\n    const contents = {\n        MessageId: undefined,\n    };\n    if (output[\"MessageId\"] !== undefined) {\n        contents.MessageId = __expectString(output[\"MessageId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySendDataPoint = (output, context) => {\n    const contents = {\n        Timestamp: undefined,\n        DeliveryAttempts: undefined,\n        Bounces: undefined,\n        Complaints: undefined,\n        Rejects: undefined,\n    };\n    if (output[\"Timestamp\"] !== undefined) {\n        contents.Timestamp = __expectNonNull(__parseRfc3339DateTime(output[\"Timestamp\"]));\n    }\n    if (output[\"DeliveryAttempts\"] !== undefined) {\n        contents.DeliveryAttempts = __strictParseLong(output[\"DeliveryAttempts\"]);\n    }\n    if (output[\"Bounces\"] !== undefined) {\n        contents.Bounces = __strictParseLong(output[\"Bounces\"]);\n    }\n    if (output[\"Complaints\"] !== undefined) {\n        contents.Complaints = __strictParseLong(output[\"Complaints\"]);\n    }\n    if (output[\"Rejects\"] !== undefined) {\n        contents.Rejects = __strictParseLong(output[\"Rejects\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySendDataPointList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_querySendDataPoint(entry, context);\n    });\n};\nconst deserializeAws_querySendEmailResponse = (output, context) => {\n    const contents = {\n        MessageId: undefined,\n    };\n    if (output[\"MessageId\"] !== undefined) {\n        contents.MessageId = __expectString(output[\"MessageId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySendRawEmailResponse = (output, context) => {\n    const contents = {\n        MessageId: undefined,\n    };\n    if (output[\"MessageId\"] !== undefined) {\n        contents.MessageId = __expectString(output[\"MessageId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySendTemplatedEmailResponse = (output, context) => {\n    const contents = {\n        MessageId: undefined,\n    };\n    if (output[\"MessageId\"] !== undefined) {\n        contents.MessageId = __expectString(output[\"MessageId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySetActiveReceiptRuleSetResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_querySetIdentityDkimEnabledResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_querySetIdentityFeedbackForwardingEnabledResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_querySetIdentityHeadersInNotificationsEnabledResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_querySetIdentityMailFromDomainResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_querySetIdentityNotificationTopicResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_querySetReceiptRulePositionResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_querySNSAction = (output, context) => {\n    const contents = {\n        TopicArn: undefined,\n        Encoding: undefined,\n    };\n    if (output[\"TopicArn\"] !== undefined) {\n        contents.TopicArn = __expectString(output[\"TopicArn\"]);\n    }\n    if (output[\"Encoding\"] !== undefined) {\n        contents.Encoding = __expectString(output[\"Encoding\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySNSDestination = (output, context) => {\n    const contents = {\n        TopicARN: undefined,\n    };\n    if (output[\"TopicARN\"] !== undefined) {\n        contents.TopicARN = __expectString(output[\"TopicARN\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStopAction = (output, context) => {\n    const contents = {\n        Scope: undefined,\n        TopicArn: undefined,\n    };\n    if (output[\"Scope\"] !== undefined) {\n        contents.Scope = __expectString(output[\"Scope\"]);\n    }\n    if (output[\"TopicArn\"] !== undefined) {\n        contents.TopicArn = __expectString(output[\"TopicArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTemplate = (output, context) => {\n    const contents = {\n        TemplateName: undefined,\n        SubjectPart: undefined,\n        TextPart: undefined,\n        HtmlPart: undefined,\n    };\n    if (output[\"TemplateName\"] !== undefined) {\n        contents.TemplateName = __expectString(output[\"TemplateName\"]);\n    }\n    if (output[\"SubjectPart\"] !== undefined) {\n        contents.SubjectPart = __expectString(output[\"SubjectPart\"]);\n    }\n    if (output[\"TextPart\"] !== undefined) {\n        contents.TextPart = __expectString(output[\"TextPart\"]);\n    }\n    if (output[\"HtmlPart\"] !== undefined) {\n        contents.HtmlPart = __expectString(output[\"HtmlPart\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTemplateDoesNotExistException = (output, context) => {\n    const contents = {\n        TemplateName: undefined,\n        message: undefined,\n    };\n    if (output[\"TemplateName\"] !== undefined) {\n        contents.TemplateName = __expectString(output[\"TemplateName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTemplateMetadata = (output, context) => {\n    const contents = {\n        Name: undefined,\n        CreatedTimestamp: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = __expectString(output[\"Name\"]);\n    }\n    if (output[\"CreatedTimestamp\"] !== undefined) {\n        contents.CreatedTimestamp = __expectNonNull(__parseRfc3339DateTime(output[\"CreatedTimestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryTemplateMetadataList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_queryTemplateMetadata(entry, context);\n    });\n};\nconst deserializeAws_queryTestRenderTemplateResponse = (output, context) => {\n    const contents = {\n        RenderedTemplate: undefined,\n    };\n    if (output[\"RenderedTemplate\"] !== undefined) {\n        contents.RenderedTemplate = __expectString(output[\"RenderedTemplate\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTrackingOptions = (output, context) => {\n    const contents = {\n        CustomRedirectDomain: undefined,\n    };\n    if (output[\"CustomRedirectDomain\"] !== undefined) {\n        contents.CustomRedirectDomain = __expectString(output[\"CustomRedirectDomain\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTrackingOptionsAlreadyExistsException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTrackingOptionsDoesNotExistException = (output, context) => {\n    const contents = {\n        ConfigurationSetName: undefined,\n        message: undefined,\n    };\n    if (output[\"ConfigurationSetName\"] !== undefined) {\n        contents.ConfigurationSetName = __expectString(output[\"ConfigurationSetName\"]);\n    }\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryUpdateConfigurationSetEventDestinationResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryUpdateConfigurationSetTrackingOptionsResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryUpdateReceiptRuleResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryUpdateTemplateResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryVerificationAttributes = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = deserializeAws_queryIdentityVerificationAttributes(pair[\"value\"], context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_queryVerificationTokenList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __expectString(entry);\n    });\n};\nconst deserializeAws_queryVerifyDomainDkimResponse = (output, context) => {\n    const contents = {\n        DkimTokens: undefined,\n    };\n    if (output.DkimTokens === \"\") {\n        contents.DkimTokens = [];\n    }\n    else if (output[\"DkimTokens\"] !== undefined && output[\"DkimTokens\"][\"member\"] !== undefined) {\n        contents.DkimTokens = deserializeAws_queryVerificationTokenList(__getArrayIfSingleItem(output[\"DkimTokens\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryVerifyDomainIdentityResponse = (output, context) => {\n    const contents = {\n        VerificationToken: undefined,\n    };\n    if (output[\"VerificationToken\"] !== undefined) {\n        contents.VerificationToken = __expectString(output[\"VerificationToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryVerifyEmailIdentityResponse = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryWorkmailAction = (output, context) => {\n    const contents = {\n        TopicArn: undefined,\n        OrganizationArn: undefined,\n    };\n    if (output[\"TopicArn\"] !== undefined) {\n        contents.TopicArn = __expectString(output[\"TopicArn\"]);\n    }\n    if (output[\"OrganizationArn\"] !== undefined) {\n        contents.OrganizationArn = __expectString(output[\"OrganizationArn\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        const parsedObj = parser.parse(encoded);\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return __getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { SendEmailRequestFilterSensitiveLog, SendEmailResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_querySendEmailCommand, serializeAws_querySendEmailCommand } from \"../protocols/Aws_query\";\nexport class SendEmailCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, SendEmailCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SESClient\";\n        const commandName = \"SendEmailCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: SendEmailRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: SendEmailResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_querySendEmailCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_querySendEmailCommand(output, context);\n    }\n}\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, region, account, typeOrId] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return arn === \"arn\" && !!partition && !!service && !!account && !!typeOrId;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","import { serializerMiddlewareOption } from \"@aws-sdk/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n","import { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n","import { parseUrl } from \"@aws-sdk/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    return {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false),\n    };\n};\n","import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n","export const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        throw error;\n    }\n};\n","export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpoint = context.endpointV2?.url && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","export const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                return mw.name + \": \" + (mw.tags || []).join(\",\");\n            });\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.middlewareStack = constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n}\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody.code || parsedBody.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n","export const getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\n","export const StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\nexport class LazyJsonString extends StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\n","import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","const fallbackWindow = {};\nexport function locateWindow() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return fallbackWindow;\n}\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from \"./pureJs\";\nimport { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from \"./whatwgEncodingApi\";\nexport const fromUtf8 = (input) => typeof TextEncoder === \"function\" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\nexport const toUtf8 = (input) => typeof TextDecoder === \"function\" ? textEncoderToUtf8(input) : jsToUtf8(input);\n","export function fromUtf8(input) {\n    return new TextEncoder().encode(input);\n}\nexport function toUtf8(input) {\n    return new TextDecoder(\"utf-8\").decode(input);\n}\n","export const fromUtf8 = (input) => {\n    const bytes = [];\n    for (let i = 0, len = input.length; i < len; i++) {\n        const value = input.charCodeAt(i);\n        if (value < 0x80) {\n            bytes.push(value);\n        }\n        else if (value < 0x800) {\n            bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n        }\n        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n            bytes.push((surrogatePair >> 18) | 0b11110000, ((surrogatePair >> 12) & 0b111111) | 0b10000000, ((surrogatePair >> 6) & 0b111111) | 0b10000000, (surrogatePair & 0b111111) | 0b10000000);\n        }\n        else {\n            bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n        }\n    }\n    return Uint8Array.from(bytes);\n};\nexport const toUtf8 = (input) => {\n    let decoded = \"\";\n    for (let i = 0, len = input.length; i < len; i++) {\n        const byte = input[i];\n        if (byte < 0x80) {\n            decoded += String.fromCharCode(byte);\n        }\n        else if (0b11000000 <= byte && byte < 0b11100000) {\n            const nextByte = input[++i];\n            decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n        }\n        else if (0b11110000 <= byte && byte < 0b101101101) {\n            const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n            const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n            decoded += decodeURIComponent(encoded);\n        }\n        else {\n            decoded += String.fromCharCode(((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111));\n        }\n    }\n    return decoded;\n};\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.bowser=t():e.bowser=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(\".0\");return e.map(n.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1}else if(u[0][a]<u[1][a])return-1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];\"object\"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t]}))};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||\"\"},e}();t.default=i,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];\"string\"==typeof a?(i[t]=a,s+=1):\"object\"==typeof a&&(r[t]=a,n+=1)})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(n=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe:function(e){var t={name:\"Opera Touch\"},r=i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:\"Electron\"},r=i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:\"Miui\"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=i.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||i.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default}})}));","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  transformTagName: false,\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.suppressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n\n  this.replaceEntitiesValue = replaceEntitiesValue;\n  this.buildAttrPairStr = buildAttrPairStr;\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level)\n        } else {\n          val += this.buildTextNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction buildAttrPairStr(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  let tagEndExp = '</' + key + this.tagEndChar;\n  let piClosingChar = \"\";\n  \n  if(key[0] === \"?\") {\n    piClosingChar = \"?\";\n    tagEndExp = \"\";\n  }\n\n  if (attrStr && val.indexOf('<') === -1) {\n    return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n  } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n    return this.indentate(level) + `<!--${val}-->` + this.newLine;\n  }else {\n    return (\n      this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n      val +\n      this.indentate(level) + tagEndExp    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n      if(this.options.suppressUnpairedNode){\n        return this.indentate(level) + '<' + key + this.tagEndChar;\n      }else{\n        return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n      }\n    } else{\n      return (\n        this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar  );\n    }\n\n  }\n}\n\nfunction replaceEntitiesValue(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if( val === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(this.options.suppressUnpairedNode){\n      return this.indentate(level) + '<' + key + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n    }\n  }else if (val !== '') { //empty\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; //PI tag\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar; //normal\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options){\n    return arrToStr( jArray, options, \"\", 0);\n}\n\nfunction arrToStr(arr, options, jPath, level){\n    let xmlStr = \"\";\n\n    let indentation = \"\";\n    if(options.format && options.indentBy.length > 0){//TODO: this logic can be avoided for each call\n        indentation = EOL + \"\" + options.indentBy.repeat(level);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if(jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if(tagName === options.textNodeName){\n            let tagText = tagObj[tagName];\n            if(!isStopNode(newJPath, options)){\n                tagText = options.tagValueProcessor( tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            xmlStr += indentation + tagText;\n            continue;\n        }else if( tagName === options.cdataPropName){\n            xmlStr += indentation + `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            continue;\n        }else if( tagName === options.commentPropName){\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            continue;\n        }else if( tagName[0] === \"?\"){\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            continue;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        let tagStart =  indentation + `<${tagName}${attStr}`;\n        let tagValue = arrToStr(tagObj[tagName], options, newJPath, level + 1);\n        if(options.unpairedTags.indexOf(tagName) !== -1){\n            if(options.suppressUnpairedNode)  xmlStr += tagStart + \">\"; \n            else xmlStr += tagStart + \"/>\"; \n        }else if( (!tagValue || tagValue.length === 0) && options.suppressEmptyNode){ \n            xmlStr += tagStart + \"/>\"; \n        }else{ \n            //TODO: node with only text value should not parse the text value in next line\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>` ;\n        }\n    }\n    \n    return xmlStr;\n}\n\nfunction propName(obj){\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if(key !== \":@\") return key;\n    }\n  }\n\nfunction attr_to_str(attrMap, options){\n    let attrStr = \"\";\n    if(attrMap && !options.ignoreAttributes){\n        for (let attr in attrMap){\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if(attrVal === true && options.suppressBooleanAttributes){\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            }else{\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options){\n    jPath = jPath.substr(0,jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for(let index in options.stopNodes){\n        if(options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\"+tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options){\n    if(textValue && textValue.length > 0 && options.processEntities){\n      for (let i=0; i< options.entities.length; i++) {\n        const entity = options.entities[i];\n        textValue = textValue.replace(entity.regex, entity.val);\n      }\n    }\n    return textValue;\n  }\nmodule.exports = toXml;","//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, entity = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<') {\n                if( hasBody && \n                     xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'N' &&\n                     xmlData[i+4] === 'T' &&\n                     xmlData[i+5] === 'I' &&\n                     xmlData[i+6] === 'T' &&\n                     xmlData[i+7] === 'Y'\n                ){\n                    i += 7;\n                    entity = true;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'L' &&\n                     xmlData[i+4] === 'E' &&\n                     xmlData[i+5] === 'M' &&\n                     xmlData[i+6] === 'E' &&\n                     xmlData[i+7] === 'N' &&\n                     xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'A' &&\n                    xmlData[i+3] === 'T' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'L' &&\n                    xmlData[i+6] === 'I' &&\n                    xmlData[i+7] === 'S' &&\n                    xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'N' &&\n                    xmlData[i+3] === 'O' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'A' &&\n                    xmlData[i+6] === 'T' &&\n                    xmlData[i+7] === 'I' &&\n                    xmlData[i+8] === 'O' &&\n                    xmlData[i+9] === 'N'\n                ){\n                    //Not supported\n                    i += 9;\n                }else if( //comment\n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === '-' &&\n                    xmlData[i+3] === '-'\n                ){\n                    comment = true;\n                }else{\n                    throw new Error(\"Invalid DOCTYPE\");\n                }\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') {\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                    }else{\n                        throw new Error(`Invalid XML comment in DOCTYPE`);\n                    }\n                }else if(entity){\n                    parseEntityExp(exp, entities);\n                    entity = false;\n                }\n                angleBracketsCount--;\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\nfunction parseEntityExp(exp, entities){\n    const match = entityRegex.exec(exp);\n    if(match){\n        entities[ match[1] ] = {\n            regx : RegExp( `&${match[1]};`,\"g\"),\n            val: match[3]\n        };\n    }\n}\nmodule.exports = readDocType;","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      const aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        \n        currentNode = this.tagsNodeStack.pop();//avoid recurssion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath);\n          }\n          currentNode.addChild(childNode);\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this. options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //boolean tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          currentNode.addChild(childNode);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(childNode);\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            currentNode.addChild(childNode);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const propCount = Object.keys(obj).length;\n  if( propCount === 0 || (propCount === 1 && obj[options.textNodeName]) ) return true;\n  return false;\n}\nexports.prettify = prettify;\n","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["msSubtleCryptoMethods","isMsWindow","window","subtle","getRandomValues","undefined","methodName","subtle_1","map","concat","every","method","exports","tslib_1","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","__createBinding","o","m","k","k2","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","default","__importDefault","__classPrivateFieldGet","receiver","privateMap","has","get","__classPrivateFieldSet","set","Uint8Array","hash","secret","ie11Sha256_1","webCryptoSha256_1","Sha256","data","encoding","update","digest","sha256_js_1","getKeyPromise","sign","constants_1","keyData","catch","msCrypto","oncomplete","isView","onerror","_this","byteLength","process","BYTES_PER_ELEMENT","buffer","ArrayBuffer","toHash","Error","toArrayBufferView","finish","keyOperation","importKey","byteOffset","isEmptyData","crypto","typedArray","Int32Array","finished","RawSha256","position","bytesHashed","bufferLength","hashBuffer","bitsHashed","bufferView","DataView","undecoratedLength","setUint8","setUint32","Math","floor","out","state","state0","state1","state2","state3","state4","state5","state6","state7","temp","u","t1_1","t2_1","t1","inner","outer","bufferFromSecret","bufferHash","input","digestSync","subtleCryptoMethods","supportsSecureRandom","supportsSubtleCrypto","supportsZeroByteGCM","generateKey","name","_b","encrypt","iv","additionalData","tagLength","zeroByteAuthTag","fromUtf8","from","convertToBuffer","numToUint8","uint32ArrayFrom","Uint32Array","a_index","_superPropBase","object","property","getPrototypeOf","base","SelectorType","isFipsRegion","region","startsWith","endsWith","getRealRegion","includes","replace","CONTENT_LENGTH_HEADER","contentLengthMiddlewareOptions","tags","override","getContentLengthPlugin","options","applyToStack","clientStack","bodyLengthChecker","add","args","request","HttpRequest","headers","keys","str","toLowerCase","String","hostHeaderMiddlewareOptions","priority","getHostHeaderPlugin","requestHandler","handlerProtocol","hostname","hostHeaderMiddleware","source","excluded","sourceKeys","sourceSymbolKeys","RETRY_MODES","loggerMiddlewareOptions","getLoggerPlugin","context","response","clientName","commandName","logger","inputFilterSensitiveLog","outputFilterSensitiveLog","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","info","output","$metadata","outputWithoutMetadata","TRACE_ID_HEADER_NAME","addRecursionDetectionMiddlewareOptions","getRecursionDetectionPlugin","runtime","traceId","nonEmptyString","recursionDetectionMiddleware","DEFAULT_RETRY_MODE","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","NODEJS_TIMEOUT_ERROR_CODES","isThrottlingError","httpStatusCode","$retryable","throttling","isTransientError","code","DefaultRateLimiter","currentCapacity","enabled","lastMaxRate","measuredTxRate","requestCount","lastTimestamp","timeWindow","beta","minCapacity","minFillRate","scaleConstant","smooth","currentTimeInSeconds","getCurrentTimeInSeconds","lastThrottleTime","lastTxRateBucket","fillRate","maxCapacity","Date","now","acquireTokenBucket","amount","refillTokenBucket","delay","setTimeout","timestamp","fillAmount","min","calculatedRate","updateMeasuredRate","rateToUse","calculateTimeWindow","cubicThrottle","enableTokenBucket","cubicSuccess","newRate","updateTokenBucketRate","getPrecise","pow","max","timeBucket","currentRate","num","parseFloat","toFixed","getDefaultRetryToken","initialRetryTokens","initialRetryDelay","initialRetryCount","MAX_CAPACITY","retryCost","timeoutRetryCost","retryBackoffStrategy","delayBase","computeNextBackoffDelay","attempts","random","setDelayBase","getDefaultRetryBackoffStrategy","availableCapacity","retryDelay","lastRetryCost","retryCount","getCapacityAmount","errorType","hasRetryTokens","getRetryCount","getRetryDelay","getLastRetryCost","getRetryTokenCount","errorInfo","capacityAmount","delayFromErrorType","retryAfterHint","delayFromRetryAfterHint","getTime","releaseRetryTokens","releaseAmount","StandardRetryStrategy","maxAttemptsProvider","mode","retryToken","retryTokenScope","tokenToRenew","getMaxAttempts","maxAttempts","shouldRetry","token","console","warn","isRetryableError","AdaptiveRetryStrategy","rateLimiter","standardRetryStrategy","getSendToken","acquireInitialRetryToken","updateClientSendingRate","refreshRetryTokenForRetry","recordSuccess","HttpResponse","statusCode","resp","rnds8","rng","bind","uuid","REGEX","byteToHex","toString","substr","arr","offset","validate","buf","rnds","stringify","isRetryStrategyV2","retryStrategy","getRetyErrorInto","getRetryErrorType","getRetryAfterHint","$response","isServerError","retryMiddlewareOptions","getRetryPlugin","lastError","totalRetryDelay","v4","retryErrorInfo","userAgent","retry","retryMiddleware","retryAfterHeaderName","find","retryAfter","retryAfterSeconds","Number","isNaN","memoize","provider","isExpired","requiresRefresh","resolved","pending","hasResult","isConstant","coalesceProvider","forceRefresh","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","toHex","bytes","AMZ_DATE_QUERY_PARAM","SIGNATURE_QUERY_PARAM","TOKEN_QUERY_PARAM","AUTH_HEADER","AMZ_DATE_HEADER","GENERATED_HEADERS","SIGNATURE_HEADER","SHA256_HEADER","TOKEN_HEADER","ALWAYS_UNSIGNABLE_HEADERS","authorization","connection","expect","pragma","referer","te","trailer","upgrade","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","ALGORITHM_IDENTIFIER","EVENT_ALGORITHM_IDENTIFIER","KEY_TYPE_IDENTIFIER","MAX_PRESIGNED_TTL","signingKeyCache","cacheQueue","createScope","shortDate","service","getSigningKey","sha256Constructor","credentials","hmac","secretAccessKey","accessKeyId","credsHash","cacheKey","sessionToken","signable","ctor","getCanonicalHeaders","unsignableHeaders","signableHeaders","canonical","sort","headerName","canonicalHeaderName","test","trim","escapeUri","uri","encodeURIComponent","hexEncode","charCodeAt","toUpperCase","getPayloadHash","hashConstructor","arg","hashCtor","hasHeader","soughtHeader","cloneRequest","query","rest","cloneQuery","reduce","carry","paramName","param","isArray","moveHeadersToQuery","clone","lname","slice","unhoistableHeaders","prepareRequest","toDate","time","SignatureV4","applyChecksum","sha256","uriEscapePath","regionProvider","normalizeProvider","credentialProvider","originalRequest","signingDate","expiresIn","signingRegion","signingService","validateResolvedCredentials","formatDate","longDate","scope","ALGORITHM_QUERY_PARAM","CREDENTIAL_QUERY_PARAM","EXPIRES_QUERY_PARAM","canonicalHeaders","SIGNED_HEADERS_QUERY_PARAM","getCanonicalHeaderList","createCanonicalRequest","getSignature","toSign","signString","payload","signEvent","signRequest","priorSignature","hashedPayload","hashedHeaders","stringToSign","join","requestToSign","payloadHash","signature","sortedHeaders","getCanonicalPath","serialized","encoded","filter","getCanonicalQuery","credentialScope","canonicalRequest","hashedRequest","path","normalizedPathSegments","split","pathSegment","normalizedPath","keyPromise","createStringToSign","toISOString","normalizeCredentialProvider","expiration","getSkewCorrectedDate","systemClockOffset","getUpdatedSystemClockOffset","clockTime","currentSystemClockOffset","clockTimeInMs","parse","abs","isClockSkewed","getDateHeader","date","awsAuthMiddlewareOptions","relation","toMiddleware","getAwsAuthPlugin","addRelativeTo","authScheme","endpointV2","properties","authSchemes","multiRegionOverride","signingRegionSet","signer","serverTime","ServerTime","dateHeader","awsAuthMiddleware","USER_AGENT","X_AMZ_USER_AGENT","UA_ESCAPE_REGEX","escapeUserAgent","version","prefixSeparatorIndex","prefix","substring","uaName","item","getUserAgentMiddlewareOptions","getUserAgentPlugin","config","defaultUserAgentProvider","defaultUserAgent","customUserAgent","sdkUserAgentValue","normalUAValue","section","buildQueryString","parts","iLen","qsEntry","requestTimeout","timeoutInMs","timeoutError","FetchHttpHandler","configProvider","opts","abortSignal","requestTimeoutInMs","aborted","abortError","queryString","port","url","protocol","requestOptions","Headers","AbortController","fetchRequest","Request","raceOfPromises","fetch","fetchHeaders","transformedHeaders","entries","pair","status","blob","onabort","race","alphabetByEncoding","alphabetByValue","start","limit","char","fromCharCode","index","fromBase64","totalByteLength","dataView","bits","bitLength","chunkOffset","toBase64","bitClusterCount","ceil","streamCollector","stream","Blob","collectBlob","collectStream","readToBase64","base64","arrayBuffer","res","reader","getReader","isDone","read","prior","FileReader","onloadend","readyState","commaIndex","dataOffset","readAsDataURL","calculateBodyLength","len","size","serviceId","clientVersion","parsedUA","navigator","bowser","sections","os","browser","partitions","partitionsInfo","DEFAULT_PARTITION","partition","id","regions","outputs","regionData","regionRegex","RegExp","debugId","toDebugString","ref","fn","argv","JSON","EndpointURLScheme","EndpointError","message","IP_V4_REGEX","isIpAddress","VALID_HOST_LABEL_REGEX","isValidHostLabel","allowSubDomains","labels","isVirtualHostableS3Bucket","parseArn","segments","arn","accountId","resourceId","booleanEquals","value1","value2","getAttr","pathList","part","squareBracketIndex","arrayIndex","parseInt","getAttrPathList","acc","isSet","not","DEFAULT_PORTS","HTTP","HTTPS","parseURL","whatwgURL","URL","search","urlString","href","host","pathname","scheme","values","isIp","inputContainsDefaultPort","authority","stringEquals","stop","reverse","uriEncode","evaluateTemplate","template","evaluatedTemplateArr","templateContext","endpointParams","referenceRecord","currentIndex","openingBraceIndex","closingBraceIndex","parameterName","refName","attrName","evaluateExpression","obj","keyName","callFunction","getReferenceValue","evaluatedArgs","lib","evaluateCondition","fnArgs","debug","toAssign","evaluateConditions","conditions","conditionsReferenceRecord","condition","getEndpointHeaders","headerKey","headerVal","headerValEntry","processedExpr","getEndpointProperty","propertyEntry","getEndpointProperties","propertyKey","propertyVal","getEndpointUrl","endpointUrl","expression","evaluateEndpointRule","endpointRule","endpoint","endpointRuleOptions","evaluateErrorRule","errorRule","evaluateTreeRule","treeRule","rules","evaluateRules","rule","type","endpointOrUndefined","resolveEndpoint","ruleSetObject","parameters","paramsWithDefault","paramKey","paramDefaultValue","requiredParams","required","requiredParam","Endpoint","givenEndpoint","h","l","ruleSet","Region","UseDualStack","UseFIPS","defaultEndpointResolver","DEFAULTS_MODE_OPTIONS","isMobileBrowser","platform","getRuntimeConfig","defaultsMode","toLocaleLowerCase","resolveDefaultsModeConfig","defaultConfigProvider","loadConfigsForDefaultMode","clientSharedValues","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","endpointProvider","NoOpLogger","urlParser","parseUrl","getSharedRuntimeConfig","credentialDefaultProvider","packageInfo","RequestHandler","retryMode","useDualstackEndpoint","useFipsEndpoint","utf8Decoder","utf8Encoder","toUtf8","SESClient","configuration","_config_2","providedRegion","resolveRegionConfig","defaultSigningName","resolveClientEndpointParameters","__getRuntimeConfig","_config_4","resolveRetryConfig","resolveEndpointConfig","_config_6","normalizedCreds","signingEscapePath","regionInfoProvider","regionInfo","signingName","params","signerConstructor","SignerCtor","resolveAwsAuthConfig","_config_7","middlewareStack","use","__Client","BehaviorOnMXFailure","BounceType","DsnAction","BulkEmailStatus","SESServiceException","__ServiceException","AccountSendingPausedException","$fault","__BaseException","DimensionValueSource","ConfigurationSetAttribute","EventType","ConfigurationSetDoesNotExistException","ConfigurationSetName","ConfigurationSetSendingPausedException","ReceiptFilterPolicy","SNSActionEncoding","StopScope","TlsPolicy","CustomMailFromStatus","MailFromDomainNotVerifiedException","MessageRejected","SendEmailRequestFilterSensitiveLog","SendEmailResponseFilterSensitiveLog","serializeAws_querySendEmailCommand","buildFormUrlencodedString","serializeAws_querySendEmailRequest","Action","Version","buildHttpRpcRequest","deserializeAws_querySendEmailCommand","deserializeAws_querySendEmailCommandError","parseBody","contents","deserializeAws_querySendEmailResponse","SendEmailResult","deserializeMetadata","parseErrorBody","parsedOutput","errorCode","loadQueryErrorCode","deserializeAws_queryAccountSendingPausedExceptionResponse","deserializeAws_queryConfigurationSetDoesNotExistExceptionResponse","deserializeAws_queryConfigurationSetSendingPausedExceptionResponse","deserializeAws_queryMailFromDomainNotVerifiedExceptionResponse","deserializeAws_queryMessageRejectedResponse","parsedBody","throwDefaultError","exceptionCtor","deserialized","deserializeAws_queryAccountSendingPausedException","exception","__decorateServiceException","deserializeAws_queryConfigurationSetDoesNotExistException","deserializeAws_queryConfigurationSetSendingPausedException","deserializeAws_queryMailFromDomainNotVerifiedException","deserializeAws_queryMessageRejected","serializeAws_queryAddressList","counter","entry","serializeAws_queryContent","Data","Charset","serializeAws_queryDestination","ToAddresses","memberEntries","forEach","loc","CcAddresses","BccAddresses","serializeAws_queryMessage","Subject","Body","Text","Html","serializeAws_queryBody","serializeAws_queryMessageTag","Name","Value","serializeAws_queryMessageTagList","Source","Destination","Message","ReplyToAddresses","ReturnPath","SourceArn","ReturnPathArn","Tags","__expectString","MessageId","requestId","extendedRequestId","cfId","collectBody","streamBody","resolvedHostname","basePath","__HttpRequest","collectBodyString","parser","XMLParser","attributeNamePrefix","htmlEntities","ignoreAttributes","ignoreDeclaration","parseTagValue","trimValues","tagValueProcessor","val","addEntity","parsedObj","parsedObjToReturn","textNodeName","__getValueFromTextNode","errorBody","formEntries","__extendedEncodeURIComponent","Code","SendEmailCommand","getSerdePlugin","serialize","deserialize","getEndpointPlugin","getEndpointParameterInstructions","stack","handlerExecutionContext","handle","$Command","resolveParamsForS3","bucket","Bucket","isArnBucketName","ForcePathStyle","isDnsCompatibleBucketName","DisableMultiRegionAccessPoints","disableMultiRegionAccessPoints","DisableMRAP","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","bucketName","account","typeOrId","isArn","isValidArn","Boolean","createConfigValueProvider","configKey","canonicalEndpointParamKey","configValue","getEndpointFromInstructions","commandInput","instructionsSupplier","clientConfig","resolveParams","instructions","instruction","endpointMiddlewareOptions","serializerMiddlewareOption","endpointMiddleware","toEndpointV1","tls","customEndpointProvider","isCustomEndpoint","deserializerMiddlewareOption","serializer","deserializer","commandStack","parsed","deserializerMiddleware","serializerMiddleware","charAt","cloned","req","constructStack","absoluteEntries","relativeEntries","entriesNameSet","Set","stepWeights","priorityWeights","cloneTo","toStack","middleware","expandRelativeMiddlewareList","expandedMiddlewareList","before","after","getMiddlewareList","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","mainChain","wholeList","expendedMiddlewareList","toOverrideIndex","findIndex","toOverride","splice","plugin","remove","toRemove","isRemoved","filterCb","delete","removeByName","removeByReference","removeByTag","identify","mw","handler","initialize","build","finalizeRequest","high","normal","low","Client","command","optionsOrCb","cb","callback","resolveMiddleware","err","destroy","Command","expectString","stackTraceWarning","ServiceException","decorateServiceException","additions","connectionTimeout","extendedEncodeURIComponent","getValueFromTextNode","StringWrapper","Class","Constructor","Function","instance","enumerable","writable","configurable","querystring","decodeURIComponent","parseQueryString","fallbackWindow","locateWindow","self","promisified","TextEncoder","encode","textEncoderFromUtf8","surrogatePair","jsFromUtf8","TextDecoder","decode","textEncoderToUtf8","decoded","byte","nextByte","byteValue","jsToUtf8","module","toStringTag","getFirstMatch","match","getSecondMatch","matchAndReturnConst","getWindowsVersionName","getMacOSVersionName","getAndroidVersionName","getVersionPrecision","compareVersions","getBrowserAlias","BROWSER_ALIASES_MAP","getBrowserTypeByAlias","BROWSER_MAP","ENGINE_MAP","OS_MAP","PLATFORMS_MAP","Bada","BlackBerry","Chrome","Chromium","Electron","Epiphany","Firefox","Focus","Generic","Googlebot","Maxthon","Opera","PhantomJS","Puffin","QupZilla","QQ","QQLite","Safari","Sailfish","SeaMonkey","Sleipnir","Swing","Tizen","Vivaldi","WeChat","Roku","amazon_silk","android","bada","blackberry","chrome","chromium","electron","epiphany","firefox","focus","generic","googlebot","google_search","ie","k_meleon","maxthon","edge","mz","naver","opera","opera_coast","phantomjs","puffin","qupzilla","qq","qqlite","safari","sailfish","samsung_internet","seamonkey","sleipnir","swing","tizen","uc","vivaldi","webos","wechat","yandex","tablet","mobile","desktop","tv","WindowsPhone","Windows","MacOS","iOS","Android","WebOS","Linux","ChromeOS","PlayStation4","EdgeHTML","Blink","Trident","Presto","Gecko","WebKit","getParser","getResult","_ua","parsedResult","getUA","parseBrowser","some","describe","getBrowser","getBrowserName","getBrowserVersion","getOS","parseOS","getOSName","getOSVersion","getPlatform","parsePlatform","getPlatformType","getEngine","engine","parseEngine","getEngineName","satisfies","isOS","isPlatform","isBrowser","compareVersion","isEngine","is","versionName","vendor","model","validator","require","XMLBuilder","XMLValidator","nameStartChar","nameRegexp","regexName","isExist","isEmptyObject","merge","arrayMode","getValue","isName","string","exec","getAllMatches","regex","matches","allmatches","startIndex","lastIndex","util","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","readPI","xmlData","tagname","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","tagFound","reachedRoot","tagStartPos","closingTag","tagName","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","msg","line","tagClosed","otg","openPos","col","afterAmp","validateAmpersand","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","validateAttrName","re","validateNumberAmpersand","count","lineNumber","lines","buildFromOrderedJs","attributesGroupName","cdataPropName","format","indentBy","suppressEmptyNode","suppressUnpairedNode","suppressBooleanAttributes","attributeValueProcessor","preserveOrder","commentPropName","entities","processEntities","stopNodes","transformTagName","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","replaceEntitiesValue","buildAttrPairStr","level","j2x","tagEndExp","piClosingChar","textValue","entity","repeat","jObj","arrayNodeName","attr","newval","arrLen","Ks","L","arrToStr","jPath","xmlStr","indentation","tagObj","propName","newJPath","attStr","attr_to_str","tagStart","tagValue","tempInd","piTextNodeName","tagText","isStopNode","attrMap","attrVal","lastIndexOf","jArray","entityRegex","parseEntityExp","exp","regx","hasBody","comment","removeNSPrefix","parseAttributeValue","numberParseOptions","hex","leadingZeros","alwaysCreateTextNode","ignorePiTags","buildOptions","xmlNode","readDocType","toNumber","OrderedObjParser","currentNode","tagsNodeStack","docTypeEntities","lastEntities","ampEntity","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","readStopNodeData","saveTextToParentTag","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","parseValue","attrsRegx","attrs","oldVal","aName","newVal","attrCollection","xmlObj","textData","closeIndex","findClosingIndex","colonIndex","tagData","readTagExp","childNode","tagExp","attrExpPresent","addChild","endIndex","lastTag","tagContent","child","entityName","currentTagName","allNodesExp","stopNodePath","stopNodeExp","tagExpWithClosingIndex","attrBoundary","closingChar","ch","errMsg","closingIndex","separatorIndex","openTagCount","shouldParse","prettify","validationOption","orderedObjParser","orderedResult","compress","text","compressedObj","newJpath","isLeaf","isLeafTag","assignAttributes","jpath","atrrName","propCount","node","XmlNode","hexRegex","numRegex","consider","decimalPoint","eNotation","trimZeros","numStr","trimmedStr","skipLike","numTrimmedByZeros","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_defineProperty","ownKeys","enumerableOnly","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}